{
    "description": {
        "project_name": "DeXe",
        "compiler_versions": [
            "0.8.4"
        ]
    },
    "findings": [
        {
            "title": "Unverified Interaction",
            "reported_impact": "Critical",
            "reported_likelihood": "Critical",
            "cwe_classification": 703,
            "vulnerability_class": "Validation",
            "vulnerability_subclass": "Missing Validation",
            "vulnerable_functions": [
                "TraderPoolRiskyProposal::invest()"
            ],
            "lines": "116-175",
            "description": "It is possible for a trader to implement and provide a token with the possibility to change decimals at any period in time. As the DeXe system relies on decimals during price calculation, internal logic may be corrupted",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "invest",
                        "source_mapping": {
                            "start": 4098,
                            "length": 2153,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "invest(uint256,address,uint256,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175):\n\tExternal calls:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tState variables written after the call(s):\n\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n\t\t- info.lpLocked += lpInvestment (contracts/trader/TraderPoolRiskyProposal.sol#390)\n\t\t- info.balanceBase += baseInvestment - baseToExchange (contracts/trader/TraderPoolRiskyProposal.sol#391)\n\t\t- info.balancePosition += amountGot (contracts/trader/TraderPoolRiskyProposal.sol#402)\n\tTraderPoolRiskyProposal._proposalInfos (contracts/trader/TraderPoolRiskyProposal.sol#26) can be used in cross function reentrancies:\n\t- TraderPoolRiskyProposal._baseInProposal(uint256) (contracts/trader/TraderPoolRiskyProposal.sol#458-466)\n\t- TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#414-447)\n\t- TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#449-456)\n\t- TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412)\n\t- TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#56-65)\n\t- TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114)\n\t- TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#177-199)\n\t- TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#201-266)\n\t- TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#281-296)\n\t- TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[]) (contracts/trader/TraderPoolRiskyProposal.sol#355-360)\n\t- TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#362-378)\n\t- TraderPoolRiskyProposal.getInvestTokens(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#317-332)\n\t- TraderPoolRiskyProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#268-279)\n\t- TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175):\n\tExternal calls:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tState variables written after the call(s):\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n\t\t- [info.lpLocked += lpInvestment](contracts/trader/TraderPoolRiskyProposal.sol#L390)\n\t\t- [info.balanceBase += baseInvestment - baseToExchange](contracts/trader/TraderPoolRiskyProposal.sol#L391)\n\t\t- [info.balancePosition += amountGot](contracts/trader/TraderPoolRiskyProposal.sol#L402)\n\t[TraderPoolRiskyProposal._proposalInfos](contracts/trader/TraderPoolRiskyProposal.sol#L26) can be used in cross function reentrancies:\n\t- [TraderPoolRiskyProposal._baseInProposal(uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L458-L466)\n\t- [TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L414-L447)\n\t- [TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L449-L456)\n\t- [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412)\n\t- [TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L56-L65)\n\t- [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114)\n\t- [TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L177-L199)\n\t- [TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L201-L266)\n\t- [TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L281-L296)\n\t- [TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[])](contracts/trader/TraderPoolRiskyProposal.sol#L355-L360)\n\t- [TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L362-L378)\n\t- [TraderPoolRiskyProposal.getInvestTokens(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L317-L332)\n\t- [TraderPoolRiskyProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L268-L279)\n\t- [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L116-L175",
                        "id": "f526b19b74b6778a2a3e8987ee4562e69c6746e964a887505a087c0433801378",
                        "check": "reentrancy-eth",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "invest",
                        "source_mapping": {
                            "start": 4098,
                            "length": 2153,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "invest(uint256,address,uint256,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175):\n\tExternal calls:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tEvent emitted after the call(s):\n\t- ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot) (contracts/trader/TraderPoolRiskyProposal.sol#404-410)\n\t\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175):\n\tExternal calls:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tEvent emitted after the call(s):\n\t- [ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot)](contracts/trader/TraderPoolRiskyProposal.sol#L404-L410)\n\t\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L116-L175",
                        "id": "054f6f687f2ca956e8f3e23aef27e6111279b5cf1e129aabc541390c5eec79d6",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "invest",
                        "source_mapping": {
                            "start": 4098,
                            "length": 2153,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "invest(uint256,address,uint256,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPRP: proposal is closed) (contracts/trader/TraderPoolRiskyProposal.sol#127-131)\n",
                        "markdown": "[TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPRP: proposal is closed)](contracts/trader/TraderPoolRiskyProposal.sol#L127-L131)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L116-L175",
                        "id": "398f184307d7fb10e6652a5f8d9686b3b7e9fa68a92152e85cee579b975dbe6f",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Flashloan Attack, Front Running Attack",
            "reported_impact": "Critical",
            "reported_likelihood": "Critical",
            "cwe_classification": 362,
            "vulnerability_class": "MEV",
            "vulnerability_subclass": "Front Running",
            "vulnerable_functions": [
                "UniswapV2PathFinder::getUniV2PathWithPriceOut()",
                "UniswapV2PathFinder::getUniV2PathWithPriceIn()"
            ],
            "lines": "13-20, 32-49",
            "description": "The library uses Uniswap’s getAmountsOut and getAmountsIn functions to determine the exchange rate for the assets. Those functions provide the price based on the current state of a liquidity pool that may be easily manipulated by flasholans."
        },
        {
            "title": "Requirements Violation",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 841,
            "vulnerability_class": "Logic Flaw",
            "vulnerability_subclass": "Improper Enforcement of Behavioral Workflow",
            "vulnerable_functions": [
                "TraderPoolRiskyProposal::create()"
            ],
            "lines": "67-114",
            "description": "In a risky pool, traders can trade any token, even those created by them, and add liquidity to Uniswap. This allows the trader to always be in profit by selling their tokens at a Higher price, and closing DeXe trades at a loss.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2157,
                            "length": 1935,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tState variables written after the call(s):\n\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n\t\t- info.lpLocked += lpInvestment (contracts/trader/TraderPoolRiskyProposal.sol#390)\n\t\t- info.balanceBase += baseInvestment - baseToExchange (contracts/trader/TraderPoolRiskyProposal.sol#391)\n\t\t- info.balancePosition += amountGot (contracts/trader/TraderPoolRiskyProposal.sol#402)\n\tTraderPoolRiskyProposal._proposalInfos (contracts/trader/TraderPoolRiskyProposal.sol#26) can be used in cross function reentrancies:\n\t- TraderPoolRiskyProposal._baseInProposal(uint256) (contracts/trader/TraderPoolRiskyProposal.sol#458-466)\n\t- TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#414-447)\n\t- TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#449-456)\n\t- TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412)\n\t- TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#56-65)\n\t- TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114)\n\t- TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#177-199)\n\t- TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#201-266)\n\t- TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#281-296)\n\t- TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[]) (contracts/trader/TraderPoolRiskyProposal.sol#355-360)\n\t- TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#362-378)\n\t- TraderPoolRiskyProposal.getInvestTokens(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#317-332)\n\t- TraderPoolRiskyProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#268-279)\n\t- TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tState variables written after the call(s):\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n\t\t- [info.lpLocked += lpInvestment](contracts/trader/TraderPoolRiskyProposal.sol#L390)\n\t\t- [info.balanceBase += baseInvestment - baseToExchange](contracts/trader/TraderPoolRiskyProposal.sol#L391)\n\t\t- [info.balancePosition += amountGot](contracts/trader/TraderPoolRiskyProposal.sol#L402)\n\t[TraderPoolRiskyProposal._proposalInfos](contracts/trader/TraderPoolRiskyProposal.sol#L26) can be used in cross function reentrancies:\n\t- [TraderPoolRiskyProposal._baseInProposal(uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L458-L466)\n\t- [TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L414-L447)\n\t- [TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L449-L456)\n\t- [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412)\n\t- [TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L56-L65)\n\t- [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114)\n\t- [TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L177-L199)\n\t- [TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L201-L266)\n\t- [TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L281-L296)\n\t- [TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[])](contracts/trader/TraderPoolRiskyProposal.sol#L355-L360)\n\t- [TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L362-L378)\n\t- [TraderPoolRiskyProposal.getInvestTokens(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L317-L332)\n\t- [TraderPoolRiskyProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L268-L279)\n\t- [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "0f21a6366fa636f47f68a89e928a20c1ad40471e7463e35865d42d68226640e4",
                        "check": "reentrancy-eth",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2157,
                            "length": 1935,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\tState variables written after the call(s):\n\t- _proposalInfos[proposalId].descriptionURL = descriptionURL (contracts/trader/TraderPoolRiskyProposal.sol#98)\n\t- _proposalInfos[proposalId].token = token (contracts/trader/TraderPoolRiskyProposal.sol#99)\n\t- _proposalInfos[proposalId].tokenDecimals = ERC20(token).decimals() (contracts/trader/TraderPoolRiskyProposal.sol#100)\n\t- _proposalInfos[proposalId].proposalLimits = proposalLimits (contracts/trader/TraderPoolRiskyProposal.sol#101)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\tState variables written after the call(s):\n\t- [_proposalInfos[proposalId].descriptionURL = descriptionURL](contracts/trader/TraderPoolRiskyProposal.sol#L98)\n\t- [_proposalInfos[proposalId].token = token](contracts/trader/TraderPoolRiskyProposal.sol#L99)\n\t- [_proposalInfos[proposalId].tokenDecimals = ERC20(token).decimals()](contracts/trader/TraderPoolRiskyProposal.sol#L100)\n\t- [_proposalInfos[proposalId].proposalLimits = proposalLimits](contracts/trader/TraderPoolRiskyProposal.sol#L101)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "17e6850ce2820cb7072d5bd657d58496e89474d3cb028605e3ca9874b5b952eb",
                        "check": "reentrancy-benign",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2157,
                            "length": 1935,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\tEvent emitted after the call(s):\n\t- ProposalCreated(proposalId,token,proposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#103)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\tEvent emitted after the call(s):\n\t- [ProposalCreated(proposalId,token,proposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L103)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "6b7886f74df8ee393e6b66d00c60ab6eaccaa60cae55fe8f5068fffb0f39bb96",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2157,
                            "length": 1935,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tEvent emitted after the call(s):\n\t- ProposalDivested(proposalId,user,lp2Amount,lpTransfer,baseTransfer) (contracts/trader/TraderPoolProposal.sol#209)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- ProposalInvested(proposalId,user,lpAmount,baseAmount,lp2Amount) (contracts/trader/TraderPoolProposal.sol#225)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- ProposalJoined(proposalId,user) (contracts/trader/TraderPoolProposal.sol#196)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- ProposalLeft(proposalId,user) (contracts/trader/TraderPoolProposal.sol#184)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- TransferSingle(operator,address(0),to,id,amount) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#278)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tEvent emitted after the call(s):\n\t- [ProposalDivested(proposalId,user,lp2Amount,lpTransfer,baseTransfer)](contracts/trader/TraderPoolProposal.sol#L209)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [ProposalInvested(proposalId,user,lpAmount,baseAmount,lp2Amount)](contracts/trader/TraderPoolProposal.sol#L225)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [ProposalJoined(proposalId,user)](contracts/trader/TraderPoolProposal.sol#L196)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [ProposalLeft(proposalId,user)](contracts/trader/TraderPoolProposal.sol#L184)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [TransferSingle(operator,address(0),to,id,amount)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L278)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "747c88a60f5a7a55afbaa925b76d5df42e91e38942baf277958f1c1d134fdba4",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2157,
                            "length": 1935,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tEvent emitted after the call(s):\n\t- ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot) (contracts/trader/TraderPoolRiskyProposal.sol#404-410)\n\t\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tEvent emitted after the call(s):\n\t- [ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot)](contracts/trader/TraderPoolRiskyProposal.sol#L404-L410)\n\t\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "df7fe1ae0f5beb75e531b2cc9dc3c0c9bd60f33f1a585c031a8548d5e67caa79",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2157,
                            "length": 1935,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                        }
                    },
                    "detector": {
                        "description": "TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPRP: wrong timestamp) (contracts/trader/TraderPoolRiskyProposal.sol#79-82)\n",
                        "markdown": "[TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPRP: wrong timestamp)](contracts/trader/TraderPoolRiskyProposal.sol#L79-L82)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "2a0842fd6de4d4909d734a051b718c5e4dfdc8bcb289fb992899502a9831e2ac",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Highly Permissive Role Access",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 284,
            "vulnerability_class": "Access Control",
            "vulnerability_subclass": "Excessive Privilege",
            "vulnerable_functions": [
                "CoreProperties::setDEXECommissionPercentages()",
                "CoreProperties::setTraderCommissionPercentages()"
            ],
            "lines": "90-100, 102-108",
            "description": "The owner of the contract could change commissions at any period of time. The upper bound limit for the commission is not set up. This may lead to the manipulation of fees."
        },
        {
            "title": "Requirements Violation",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 1068,
            "vulnerability_class": "Logic Flaw",
            "vulnerability_subclass": "Documentation",
            "vulnerable_functions": [
                "Insurance::acceptClaim()"
            ],
            "lines": "89-115",
            "description": "According to the documentation, it should be possible to view users and their deposits in an insurance pool. However, the functionality is not implemented.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "acceptClaim",
                        "source_mapping": {
                            "start": 2959,
                            "length": 893,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "acceptClaim(string,address[],uint256[])"
                        }
                    },
                    "detector": {
                        "description": "Insurance.acceptClaim(string,address[],uint256[]) (contracts/insurance/Insurance.sol#89-115) ignores return value by _acceptedClaims.add(url) (contracts/insurance/Insurance.sol#113)\n",
                        "markdown": "[Insurance.acceptClaim(string,address[],uint256[])](contracts/insurance/Insurance.sol#L89-L115) ignores return value by [_acceptedClaims.add(url)](contracts/insurance/Insurance.sol#L113)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L89-L115",
                        "id": "216abc888df901cf09d9af4527e70859a8caff1322217dae2ac51df940f4b563",
                        "check": "unused-return",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "acceptClaim",
                        "source_mapping": {
                            "start": 2959,
                            "length": 893,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "acceptClaim(string,address[],uint256[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in Insurance.acceptClaim(string,address[],uint256[]) (contracts/insurance/Insurance.sol#89-115):\n\tExternal calls:\n\t- amounts[i_scope_0] = _payout(users[i_scope_0],amounts[i_scope_0]) (contracts/insurance/Insurance.sol#110)\n\t\t- _dexe.transfer(user,payout) (contracts/insurance/Insurance.sol#163)\n\tState variables written after the call(s):\n\t- _acceptedClaimsInfo[url] = AcceptedClaims(users,amounts) (contracts/insurance/Insurance.sol#114)\n",
                        "markdown": "Reentrancy in [Insurance.acceptClaim(string,address[],uint256[])](contracts/insurance/Insurance.sol#L89-L115):\n\tExternal calls:\n\t- [amounts[i_scope_0] = _payout(users[i_scope_0],amounts[i_scope_0])](contracts/insurance/Insurance.sol#L110)\n\t\t- [_dexe.transfer(user,payout)](contracts/insurance/Insurance.sol#L163)\n\tState variables written after the call(s):\n\t- [_acceptedClaimsInfo[url] = AcceptedClaims(users,amounts)](contracts/insurance/Insurance.sol#L114)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L89-L115",
                        "id": "42ebe54af535bab3daa1bdb1d06c8fcfbd2d039903503f19637ef6170a8c5e51",
                        "check": "reentrancy-benign",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Assets Integrity; Undocumented Behavior",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 1068,
            "vulnerability_class": "Logic Flaw",
            "vulnerability_subclass": "Documentation",
            "vulnerable_functions": [
                "TraderPoolInvestProposal::withdraw()"
            ],
            "lines": "156-164",
            "description": "TraderPoolInvestProposal allows traders to withdraw all user's investments from the pool. There is no guarantee that users would be able to receive their funds back.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "withdraw",
                        "source_mapping": {
                            "start": 5690,
                            "length": 669,
                            "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                            "is_dependency": false,
                            "lines": "156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolInvestProposal",
                                "source_mapping": {
                                    "start": 543,
                                    "length": 11912,
                                    "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "withdraw(uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174):\n\tExternal calls:\n\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransfer(_parentTraderPoolInfo.trader,amount.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolInvestProposal.sol#168-171)\n\tEvent emitted after the call(s):\n\t- ProposalWithdrawn(proposalId,msg.sender,amount) (contracts/trader/TraderPoolInvestProposal.sol#173)\n",
                        "markdown": "Reentrancy in [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174):\n\tExternal calls:\n\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransfer(_parentTraderPoolInfo.trader,amount.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolInvestProposal.sol#L168-L171)\n\tEvent emitted after the call(s):\n\t- [ProposalWithdrawn(proposalId,msg.sender,amount)](contracts/trader/TraderPoolInvestProposal.sol#L173)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolInvestProposal.sol#L156-L174",
                        "id": "4c5b8376ef9cf3143b19467a89165bd720f82a3c58a3ae2284dde450f31b6132",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Highly Permissive Role Access",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 284,
            "vulnerability_class": "Access Control",
            "vulnerability_subclass": "Excessive Privilege",
            "vulnerable_functions": [
                "ERC20Sale::burn()"
            ],
            "lines": "49-51",
            "description": "The owner of the contract may burn any user funds"
        },
        {
            "title": "Denial of Service Vulnerability",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 400,
            "vulnerability_class": "Denial of Service",
            "vulnerability_subclass": "Uncontrolled Resource Consumption",
            "vulnerable_functions": [
                "GovValidators::duration()"
            ],
            "lines": "51, 59, 64, 77, 96, 117, 124, 182, 186",
            "description": "The voting duration should be greater than a minimal value. This may lead to not reaching a quorum as the proposal quickly comes to a Defeated state.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "createInternalProposal",
                        "source_mapping": {
                            "start": 2368,
                            "length": 1788,
                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                            "is_dependency": false,
                            "lines": "70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "GovValidators",
                                "source_mapping": {
                                    "start": 361,
                                    "length": 10772,
                                    "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                    "filename_short": "contracts/gov/validators/GovValidators.sol",
                                    "is_dependency": false,
                                    "lines": "14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in GovValidators.createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[]) (contracts/gov/validators/GovValidators.sol#70-113):\n\tExternal calls:\n\t- _internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users}) (contracts/gov/validators/GovValidators.sol#93-105)\n\tEvent emitted after the call(s):\n\t- InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender) (contracts/gov/validators/GovValidators.sol#107-112)\n",
                        "markdown": "Reentrancy in [GovValidators.createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[])](contracts/gov/validators/GovValidators.sol#L70-L113):\n\tExternal calls:\n\t- [_internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users})](contracts/gov/validators/GovValidators.sol#L93-L105)\n\tEvent emitted after the call(s):\n\t- [InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender)](contracts/gov/validators/GovValidators.sol#L107-L112)\n",
                        "first_markdown_element": "contracts/gov/validators/GovValidators.sol#L70-L113",
                        "id": "7ac3cf7b30155177718ad38b80c4dbe8afb35b684155aec016e9689d14c4e72c",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "createExternalProposal",
                        "source_mapping": {
                            "start": 4162,
                            "length": 644,
                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                            "is_dependency": false,
                            "lines": "115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "GovValidators",
                                "source_mapping": {
                                    "start": 361,
                                    "length": 10772,
                                    "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                    "filename_short": "contracts/gov/validators/GovValidators.sol",
                                    "is_dependency": false,
                                    "lines": "14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "createExternalProposal(uint256,uint64,uint128)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in GovValidators.createExternalProposal(uint256,uint64,uint128) (contracts/gov/validators/GovValidators.sol#115-133):\n\tExternal calls:\n\t- _externalProposals[proposalId] = ExternalProposal({core:ProposalCore({voteEnd:uint64(block.timestamp + duration),executed:false,quorum:quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())})}) (contracts/gov/validators/GovValidators.sol#122-130)\n\tEvent emitted after the call(s):\n\t- ExternalProposalCreated(proposalId,quorum) (contracts/gov/validators/GovValidators.sol#132)\n",
                        "markdown": "Reentrancy in [GovValidators.createExternalProposal(uint256,uint64,uint128)](contracts/gov/validators/GovValidators.sol#L115-L133):\n\tExternal calls:\n\t- [_externalProposals[proposalId] = ExternalProposal({core:ProposalCore({voteEnd:uint64(block.timestamp + duration),executed:false,quorum:quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())})})](contracts/gov/validators/GovValidators.sol#L122-L130)\n\tEvent emitted after the call(s):\n\t- [ExternalProposalCreated(proposalId,quorum)](contracts/gov/validators/GovValidators.sol#L132)\n",
                        "first_markdown_element": "contracts/gov/validators/GovValidators.sol#L115-L133",
                        "id": "a34e7e878b69683755bb99c66a7ee4d8a70ed85f203b84dae003cc86480ece51",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Highly Permissive Role Access",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 284,
            "vulnerability_class": "Access Control",
            "vulnerability_subclass": "Excessive Privilege",
            "vulnerable_functions": [
                "GovValidators::changeBalances()"
            ],
            "lines": "135-140",
            "description": "The owner of the contract may change validators at any moment"
        },
        {
            "title": "Integer Overflow",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 190,
            "vulnerability_class": "Arithmetic",
            "vulnerability_subclass": "Integer Overflow",
            "vulnerable_functions": [
                "GovUserKeeper::_setERC721Address()"
            ],
            "lines": "643-667",
            "description": "The function _setERC721Address has the require(nftsTotalSupply > 0) check implemented. However, due to downcasting of nftsTotalSupply to uint128, this condition could be bypassed."
        },
        {
            "title": "Denial of Service Vulnerability",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 190,
            "vulnerability_class": "Arithmetic",
            "vulnerability_subclass": "Integer Overflow",
            "vulnerable_functions": [
                "GovValidators::createExternalProposal()",
                "GovValidators::createInternalProposal()",
                "GovPoolCreate::createProposal()"
            ],
            "lines": "70-113, 115-130, 30-78",
            "description": "In case of setting voting duration close to the uint64 max value, voteEnd voting field may be overflowed and newly created votings can come to a Defeated state.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "createProposal",
                        "source_mapping": {
                            "start": 846,
                            "length": 1502,
                            "filename_relative": "contracts/libs/gov-pool/GovPoolCreate.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/libs/gov-pool/GovPoolCreate.sol",
                            "filename_short": "contracts/libs/gov-pool/GovPoolCreate.sol",
                            "is_dependency": false,
                            "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "GovPoolCreate",
                                "source_mapping": {
                                    "start": 467,
                                    "length": 8002,
                                    "filename_relative": "contracts/libs/gov-pool/GovPoolCreate.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/libs/gov-pool/GovPoolCreate.sol",
                                    "filename_short": "contracts/libs/gov-pool/GovPoolCreate.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "createProposal(mapping(uint256 => IGovPool.Proposal),string,string,address[],uint256[],bytes[])"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in GovPoolCreate.createProposal(mapping(uint256 => IGovPool.Proposal),string,string,address[],uint256[],bytes[]) (contracts/libs/gov-pool/GovPoolCreate.sol#30-78):\n\tExternal calls:\n\t- (settings,settingsId,snapshotId) = _validateProposal(executors,values,data) (contracts/libs/gov-pool/GovPoolCreate.sol#45-49)\n\t\t- snapshotId = IGovUserKeeper(userKeeper).createNftPowerSnapshot() (contracts/libs/gov-pool/GovPoolCreate.sol#155)\n\tEvent emitted after the call(s):\n\t- ProposalCreated(proposalId,_descriptionURL,misc,settings.quorum,settingsId,settings.rewardToken,msg.sender) (contracts/libs/gov-pool/GovPoolCreate.sol#69-77)\n",
                        "markdown": "Reentrancy in [GovPoolCreate.createProposal(mapping(uint256 => IGovPool.Proposal),string,string,address[],uint256[],bytes[])](contracts/libs/gov-pool/GovPoolCreate.sol#L30-L78):\n\tExternal calls:\n\t- [(settings,settingsId,snapshotId) = _validateProposal(executors,values,data)](contracts/libs/gov-pool/GovPoolCreate.sol#L45-L49)\n\t\t- [snapshotId = IGovUserKeeper(userKeeper).createNftPowerSnapshot()](contracts/libs/gov-pool/GovPoolCreate.sol#L155)\n\tEvent emitted after the call(s):\n\t- [ProposalCreated(proposalId,_descriptionURL,misc,settings.quorum,settingsId,settings.rewardToken,msg.sender)](contracts/libs/gov-pool/GovPoolCreate.sol#L69-L77)\n",
                        "first_markdown_element": "contracts/libs/gov-pool/GovPoolCreate.sol#L30-L78",
                        "id": "570fc5f072d192b02277ebf726382d2ae7028cd4d7f4a0a3a02bec21c75b4c8f",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "_internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users})",
                        "source_mapping": {
                            "start": 3416,
                            "length": 549,
                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                            "is_dependency": false,
                            "lines": "93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105",
                            "starting_column": 9,
                            "ending_column": 11
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "createInternalProposal",
                                "source_mapping": {
                                    "start": 2368,
                                    "length": 1788,
                                    "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                    "filename_short": "contracts/gov/validators/GovValidators.sol",
                                    "is_dependency": false,
                                    "lines": "70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovValidators",
                                        "source_mapping": {
                                            "start": 361,
                                            "length": 10772,
                                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                                            "is_dependency": false,
                                            "lines": "14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in GovValidators.createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[]) (contracts/gov/validators/GovValidators.sol#70-113):\n\tExternal calls:\n\t- _internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users}) (contracts/gov/validators/GovValidators.sol#93-105)\n\tEvent emitted after the call(s):\n\t- InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender) (contracts/gov/validators/GovValidators.sol#107-112)\n",
                        "markdown": "Reentrancy in [GovValidators.createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[])](contracts/gov/validators/GovValidators.sol#L70-L113):\n\tExternal calls:\n\t- [_internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users})](contracts/gov/validators/GovValidators.sol#L93-L105)\n\tEvent emitted after the call(s):\n\t- [InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender)](contracts/gov/validators/GovValidators.sol#L107-L112)\n",
                        "first_markdown_element": "contracts/gov/validators/GovValidators.sol#L70-L113",
                        "id": "7ac3cf7b30155177718ad38b80c4dbe8afb35b684155aec016e9689d14c4e72c",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "_externalProposals[proposalId] = ExternalProposal({core:ProposalCore({voteEnd:uint64(block.timestamp + duration),executed:false,quorum:quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())})})",
                        "source_mapping": {
                            "start": 4409,
                            "length": 331,
                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                            "is_dependency": false,
                            "lines": "122, 123, 124, 125, 126, 127, 128, 129, 130",
                            "starting_column": 9,
                            "ending_column": 11
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "createExternalProposal",
                                "source_mapping": {
                                    "start": 4162,
                                    "length": 644,
                                    "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                    "filename_short": "contracts/gov/validators/GovValidators.sol",
                                    "is_dependency": false,
                                    "lines": "115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovValidators",
                                        "source_mapping": {
                                            "start": 361,
                                            "length": 10772,
                                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                                            "is_dependency": false,
                                            "lines": "14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "createExternalProposal(uint256,uint64,uint128)"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in GovValidators.createExternalProposal(uint256,uint64,uint128) (contracts/gov/validators/GovValidators.sol#115-133):\n\tExternal calls:\n\t- _externalProposals[proposalId] = ExternalProposal({core:ProposalCore({voteEnd:uint64(block.timestamp + duration),executed:false,quorum:quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())})}) (contracts/gov/validators/GovValidators.sol#122-130)\n\tEvent emitted after the call(s):\n\t- ExternalProposalCreated(proposalId,quorum) (contracts/gov/validators/GovValidators.sol#132)\n",
                        "markdown": "Reentrancy in [GovValidators.createExternalProposal(uint256,uint64,uint128)](contracts/gov/validators/GovValidators.sol#L115-L133):\n\tExternal calls:\n\t- [_externalProposals[proposalId] = ExternalProposal({core:ProposalCore({voteEnd:uint64(block.timestamp + duration),executed:false,quorum:quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())})})](contracts/gov/validators/GovValidators.sol#L122-L130)\n\tEvent emitted after the call(s):\n\t- [ExternalProposalCreated(proposalId,quorum)](contracts/gov/validators/GovValidators.sol#L132)\n",
                        "first_markdown_element": "contracts/gov/validators/GovValidators.sol#L115-L133",
                        "id": "a34e7e878b69683755bb99c66a7ee4d8a70ed85f203b84dae003cc86480ece51",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_descriptionURL",
                        "source_mapping": {
                            "start": 944,
                            "length": 31,
                            "filename_relative": "contracts/libs/gov-pool/GovPoolCreate.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/libs/gov-pool/GovPoolCreate.sol",
                            "filename_short": "contracts/libs/gov-pool/GovPoolCreate.sol",
                            "is_dependency": false,
                            "lines": "32",
                            "starting_column": 9,
                            "ending_column": 40
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "createProposal",
                                "source_mapping": {
                                    "start": 846,
                                    "length": 1502,
                                    "filename_relative": "contracts/libs/gov-pool/GovPoolCreate.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/libs/gov-pool/GovPoolCreate.sol",
                                    "filename_short": "contracts/libs/gov-pool/GovPoolCreate.sol",
                                    "is_dependency": false,
                                    "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPoolCreate",
                                        "source_mapping": {
                                            "start": 467,
                                            "length": 8002,
                                            "filename_relative": "contracts/libs/gov-pool/GovPoolCreate.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/libs/gov-pool/GovPoolCreate.sol",
                                            "filename_short": "contracts/libs/gov-pool/GovPoolCreate.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "createProposal(mapping(uint256 => IGovPool.Proposal),string,string,address[],uint256[],bytes[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter GovPoolCreate.createProposal(mapping(uint256 => IGovPool.Proposal),string,string,address[],uint256[],bytes[])._descriptionURL (contracts/libs/gov-pool/GovPoolCreate.sol#32) is not in mixedCase\n",
                        "markdown": "Parameter [GovPoolCreate.createProposal(mapping(uint256 => IGovPool.Proposal),string,string,address[],uint256[],bytes[])._descriptionURL](contracts/libs/gov-pool/GovPoolCreate.sol#L32) is not in mixedCase\n",
                        "first_markdown_element": "contracts/libs/gov-pool/GovPoolCreate.sol#L32",
                        "id": "6172e6554b29161a45cfc8abe4a14b3cd254133fcac5db6e6678eeefd7aef7ca",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                }
            ]
        },
        {
            "title": "Highly Permissive Role Access",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 284,
            "vulnerability_class": "Access Control",
            "vulnerability_subclass": "Excessive Privilege",
            "vulnerable_functions": [
                "Insurance::setDependencies()"
            ],
            "lines": "47-52",
            "description": "The injector is able to change the DeXe token address on the contract. This may lead to users being unable to withdraw their deposits and the injector may take control over the insurance pool."
        },
        {
            "title": "Denial of Service Vulnerability",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 190,
            "vulnerability_class": "Arithmetic",
            "vulnerability_subclass": "Integer Overflow",
            "vulnerable_functions": [
                "GovValidators::createInternalProposal()"
            ],
            "lines": "70-113",
            "description": "Each new proposal creates a new structure with snapshotId as its unique identifier. snapshotId is capped by a uint32 type, which has a max value of 4294967295. The potential attacker may max out this value in the event of a potential gas price drop.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "node",
                        "name": "InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender)",
                        "source_mapping": {
                            "start": 3976,
                            "length": 173,
                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                            "is_dependency": false,
                            "lines": "107, 108, 109, 110, 111, 112",
                            "starting_column": 9,
                            "ending_column": 10
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "createInternalProposal",
                                "source_mapping": {
                                    "start": 2368,
                                    "length": 1788,
                                    "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                    "filename_short": "contracts/gov/validators/GovValidators.sol",
                                    "is_dependency": false,
                                    "lines": "70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovValidators",
                                        "source_mapping": {
                                            "start": 361,
                                            "length": 10772,
                                            "filename_relative": "contracts/gov/validators/GovValidators.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/validators/GovValidators.sol",
                                            "filename_short": "contracts/gov/validators/GovValidators.sol",
                                            "is_dependency": false,
                                            "lines": "14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "event"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in GovValidators.createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[]) (contracts/gov/validators/GovValidators.sol#70-113):\n\tExternal calls:\n\t- _internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users}) (contracts/gov/validators/GovValidators.sol#93-105)\n\tEvent emitted after the call(s):\n\t- InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender) (contracts/gov/validators/GovValidators.sol#107-112)\n",
                        "markdown": "Reentrancy in [GovValidators.createInternalProposal(IGovValidators.ProposalType,string,uint256[],address[])](contracts/gov/validators/GovValidators.sol#L70-L113):\n\tExternal calls:\n\t- [_internalProposals[++ latestInternalProposalId] = InternalProposal({proposalType:proposalType,core:ProposalCore({voteEnd:uint64(block.timestamp + internalProposalSettings.duration),executed:false,quorum:internalProposalSettings.quorum,votesFor:0,snapshotId:uint32(govValidatorsToken.snapshot())}),descriptionURL:descriptionURL,newValues:newValues,userAddresses:users})](contracts/gov/validators/GovValidators.sol#L93-L105)\n\tEvent emitted after the call(s):\n\t- [InternalProposalCreated(latestInternalProposalId,descriptionURL,internalProposalSettings.quorum,msg.sender)](contracts/gov/validators/GovValidators.sol#L107-L112)\n",
                        "first_markdown_element": "contracts/gov/validators/GovValidators.sol#L70-L113",
                        "id": "7ac3cf7b30155177718ad38b80c4dbe8afb35b684155aec016e9689d14c4e72c",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Access Control Violation; Race Conditions",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 284,
            "vulnerability_class": "Access Control",
            "vulnerability_subclass": "Authorization",
            "vulnerable_functions": [
                "CoreProperties::setDependencies()",
                "PriceFeed::setDependencies()",
                "GovPool::setDependencies()",
                "Insurance::setDependencies()",
                "BasicTraderPool::setDependencies()",
                "InvestTraderPool::setDependencies()",
                "TraderPool::setDependencies()",
                "TraderPoolProposal::setDependencies()"
            ],
            "lines": "39-45, 46-53, 134-139, 47-52, 43-47, 46-50, 100-107, 96-100",
            "description": "Since, for the first time, the setter functions could be called by anyone, there is a risk of race conditions that may result in the inconsistent state of the contract. This may lead to access to critical state variables by an unauthorized user."
        },
        {
            "title": "Upgradeability Issues",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 1006,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Upgradeability",
            "vulnerable_functions": [
                "TraderPool::",
                "TraderPoolProposal::"
            ],
            "lines": "",
            "description": "The contracts do not follow the upgradability best practices by not adding a gap in the contract storage."
        },
        {
            "title": "Requirements Violation; Misleading Naming",
            "reported_impact": "High",
            "reported_likelihood": "High",
            "cwe_classification": 1110,
            "vulnerability_class": "Logic Flaw",
            "vulnerability_subclass": "Documentation",
            "vulnerable_functions": [
                "Insurance::buyInsurance()"
            ],
            "lines": "54-68",
            "description": "The buyInsurance function does not reflect exactly what happens with the user funds.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "buyInsurance",
                        "source_mapping": {
                            "start": 1862,
                            "length": 472,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "buyInsurance(uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance.buyInsurance(uint256) (contracts/insurance/Insurance.sol#54-68) ignores return value by _dexe.transferFrom(msg.sender,address(this),deposit) (contracts/insurance/Insurance.sol#65)\n",
                        "markdown": "[Insurance.buyInsurance(uint256)](contracts/insurance/Insurance.sol#L54-L68) ignores return value by [_dexe.transferFrom(msg.sender,address(this),deposit)](contracts/insurance/Insurance.sol#L65)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L54-L68",
                        "id": "9449a3ffb080f08c34eb80d5534dc75e6958e2ae3b237e9f805ee3db3acac4b8",
                        "check": "unchecked-transfer",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "buyInsurance",
                        "source_mapping": {
                            "start": 1862,
                            "length": 472,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "buyInsurance(uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in Insurance.buyInsurance(uint256) (contracts/insurance/Insurance.sol#54-68):\n\tExternal calls:\n\t- _dexe.transferFrom(msg.sender,address(this),deposit) (contracts/insurance/Insurance.sol#65)\n\tEvent emitted after the call(s):\n\t- Deposited(deposit,msg.sender) (contracts/insurance/Insurance.sol#67)\n",
                        "markdown": "Reentrancy in [Insurance.buyInsurance(uint256)](contracts/insurance/Insurance.sol#L54-L68):\n\tExternal calls:\n\t- [_dexe.transferFrom(msg.sender,address(this),deposit)](contracts/insurance/Insurance.sol#L65)\n\tEvent emitted after the call(s):\n\t- [Deposited(deposit,msg.sender)](contracts/insurance/Insurance.sol#L67)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L54-L68",
                        "id": "15e925717088970e3ea45484482847b4966f616853532749fb212f90cb323ab7",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Best Practice Violation - CEI Pattern Violation",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 696,
            "vulnerability_class": "Reentrancy",
            "vulnerability_subclass": "Incorrect Behavior Order",
            "vulnerable_functions": [
                "TraderPoolInvestProposal::create()",
                "TraderPoolInvestProposal::invest()",
                "TraderPoolRiskyProposal::create()",
                "TraderPoolRiskyProposal::invest()",
                "TraderPoolRiskyProposal::_investActivePortfolio()"
            ],
            "lines": "63-93, 95-122, 67-114, 116-175, 380-412",
            "description": "The Checks-Effects-Interactions pattern is violated. In some functions, the state variables are modified after doing external calls",
            "possible_found_in": [
                {
                    "element": {
                        "type": "node",
                        "name": "priceFeed.checkAllowance(baseToken)",
                        "source_mapping": {
                            "start": 3364,
                            "length": 35,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "95",
                            "starting_column": 9,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "create",
                                "source_mapping": {
                                    "start": 2157,
                                    "length": 1935,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tState variables written after the call(s):\n\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n\t\t- info.lpLocked += lpInvestment (contracts/trader/TraderPoolRiskyProposal.sol#390)\n\t\t- info.balanceBase += baseInvestment - baseToExchange (contracts/trader/TraderPoolRiskyProposal.sol#391)\n\t\t- info.balancePosition += amountGot (contracts/trader/TraderPoolRiskyProposal.sol#402)\n\tTraderPoolRiskyProposal._proposalInfos (contracts/trader/TraderPoolRiskyProposal.sol#26) can be used in cross function reentrancies:\n\t- TraderPoolRiskyProposal._baseInProposal(uint256) (contracts/trader/TraderPoolRiskyProposal.sol#458-466)\n\t- TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#414-447)\n\t- TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#449-456)\n\t- TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412)\n\t- TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#56-65)\n\t- TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114)\n\t- TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#177-199)\n\t- TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#201-266)\n\t- TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#281-296)\n\t- TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[]) (contracts/trader/TraderPoolRiskyProposal.sol#355-360)\n\t- TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#362-378)\n\t- TraderPoolRiskyProposal.getInvestTokens(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#317-332)\n\t- TraderPoolRiskyProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#268-279)\n\t- TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tState variables written after the call(s):\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n\t\t- [info.lpLocked += lpInvestment](contracts/trader/TraderPoolRiskyProposal.sol#L390)\n\t\t- [info.balanceBase += baseInvestment - baseToExchange](contracts/trader/TraderPoolRiskyProposal.sol#L391)\n\t\t- [info.balancePosition += amountGot](contracts/trader/TraderPoolRiskyProposal.sol#L402)\n\t[TraderPoolRiskyProposal._proposalInfos](contracts/trader/TraderPoolRiskyProposal.sol#L26) can be used in cross function reentrancies:\n\t- [TraderPoolRiskyProposal._baseInProposal(uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L458-L466)\n\t- [TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L414-L447)\n\t- [TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L449-L456)\n\t- [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412)\n\t- [TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L56-L65)\n\t- [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114)\n\t- [TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L177-L199)\n\t- [TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L201-L266)\n\t- [TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L281-L296)\n\t- [TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[])](contracts/trader/TraderPoolRiskyProposal.sol#L355-L360)\n\t- [TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L362-L378)\n\t- [TraderPoolRiskyProposal.getInvestTokens(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L317-L332)\n\t- [TraderPoolRiskyProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L268-L279)\n\t- [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "0f21a6366fa636f47f68a89e928a20c1ad40471e7463e35865d42d68226640e4",
                        "check": "reentrancy-eth",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2379,
                            "length": 1229,
                            "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                            "is_dependency": false,
                            "lines": "63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolInvestProposal",
                                "source_mapping": {
                                    "start": 543,
                                    "length": 11912,
                                    "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93):\n\tExternal calls:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolInvestProposal.sol#87)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolInvestProposal.sol#87)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tState variables written after the call(s):\n\t- _proposalInfos[proposalId].descriptionURL = descriptionURL (contracts/trader/TraderPoolInvestProposal.sol#89)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n\t- _proposalInfos[proposalId].lpLocked = lpInvestment (contracts/trader/TraderPoolInvestProposal.sol#90)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n\t- _proposalInfos[proposalId].investedBase = baseInvestment (contracts/trader/TraderPoolInvestProposal.sol#91)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n\t- _proposalInfos[proposalId].newInvestedBase = baseInvestment (contracts/trader/TraderPoolInvestProposal.sol#92)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n",
                        "markdown": "Reentrancy in [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93):\n\tExternal calls:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolInvestProposal.sol#L87)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolInvestProposal.sol#L87)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tState variables written after the call(s):\n\t- [_proposalInfos[proposalId].descriptionURL = descriptionURL](contracts/trader/TraderPoolInvestProposal.sol#L89)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n\t- [_proposalInfos[proposalId].lpLocked = lpInvestment](contracts/trader/TraderPoolInvestProposal.sol#L90)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n\t- [_proposalInfos[proposalId].investedBase = baseInvestment](contracts/trader/TraderPoolInvestProposal.sol#L91)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n\t- [_proposalInfos[proposalId].newInvestedBase = baseInvestment](contracts/trader/TraderPoolInvestProposal.sol#L92)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolInvestProposal.sol#L63-L93",
                        "id": "39a759c24fc3457f9bec5709499e179aee51dfa2ae2665c7b669073d4979417f",
                        "check": "reentrancy-eth",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "invest",
                        "source_mapping": {
                            "start": 3614,
                            "length": 983,
                            "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                            "is_dependency": false,
                            "lines": "95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolInvestProposal",
                                "source_mapping": {
                                    "start": 543,
                                    "length": 11912,
                                    "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "invest(uint256,address,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122):\n\tExternal calls:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolInvestProposal.sol#117)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolInvestProposal.sol#117)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tState variables written after the call(s):\n\t- info.lpLocked += lpInvestment (contracts/trader/TraderPoolInvestProposal.sol#119)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n\t- info.investedBase += baseInvestment (contracts/trader/TraderPoolInvestProposal.sol#120)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n\t- info.newInvestedBase += baseInvestment (contracts/trader/TraderPoolInvestProposal.sol#121)\n\tTraderPoolInvestProposal._proposalInfos (contracts/trader/TraderPoolInvestProposal.sol#27) can be used in cross function reentrancies:\n\t- TraderPoolInvestProposal._baseInProposal(uint256) (contracts/trader/TraderPoolInvestProposal.sol#354-356)\n\t- TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits) (contracts/trader/TraderPoolInvestProposal.sol#52-61)\n\t- TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256) (contracts/trader/TraderPoolInvestProposal.sol#198-211)\n\t- TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93)\n\t- TraderPoolInvestProposal.divest(uint256,address) (contracts/trader/TraderPoolInvestProposal.sol#124-154)\n\t- TraderPoolInvestProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#213-224)\n\t- TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122)\n\t- TraderPoolInvestProposal.withdraw(uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#156-174)\n",
                        "markdown": "Reentrancy in [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122):\n\tExternal calls:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolInvestProposal.sol#L117)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolInvestProposal.sol#L117)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tState variables written after the call(s):\n\t- [info.lpLocked += lpInvestment](contracts/trader/TraderPoolInvestProposal.sol#L119)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n\t- [info.investedBase += baseInvestment](contracts/trader/TraderPoolInvestProposal.sol#L120)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n\t- [info.newInvestedBase += baseInvestment](contracts/trader/TraderPoolInvestProposal.sol#L121)\n\t[TraderPoolInvestProposal._proposalInfos](contracts/trader/TraderPoolInvestProposal.sol#L27) can be used in cross function reentrancies:\n\t- [TraderPoolInvestProposal._baseInProposal(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L354-L356)\n\t- [TraderPoolInvestProposal.changeProposalRestrictions(uint256,ITraderPoolInvestProposal.ProposalLimits)](contracts/trader/TraderPoolInvestProposal.sol#L52-L61)\n\t- [TraderPoolInvestProposal.convertInvestedBaseToDividends(uint256)](contracts/trader/TraderPoolInvestProposal.sol#L198-L211)\n\t- [TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93)\n\t- [TraderPoolInvestProposal.divest(uint256,address)](contracts/trader/TraderPoolInvestProposal.sol#L124-L154)\n\t- [TraderPoolInvestProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L213-L224)\n\t- [TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122)\n\t- [TraderPoolInvestProposal.withdraw(uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L156-L174)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolInvestProposal.sol#L95-L122",
                        "id": "52cfe2da498868b5bc21ef74d6c099525023ad5d0fbcf5c12ea1700b9c612596",
                        "check": "reentrancy-eth",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)",
                        "source_mapping": {
                            "start": 5520,
                            "length": 66,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "153",
                            "starting_column": 9,
                            "ending_column": 75
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "invest",
                                "source_mapping": {
                                    "start": 4098,
                                    "length": 2153,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "invest(uint256,address,uint256,uint256,uint256)"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175):\n\tExternal calls:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tState variables written after the call(s):\n\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n\t\t- info.lpLocked += lpInvestment (contracts/trader/TraderPoolRiskyProposal.sol#390)\n\t\t- info.balanceBase += baseInvestment - baseToExchange (contracts/trader/TraderPoolRiskyProposal.sol#391)\n\t\t- info.balancePosition += amountGot (contracts/trader/TraderPoolRiskyProposal.sol#402)\n\tTraderPoolRiskyProposal._proposalInfos (contracts/trader/TraderPoolRiskyProposal.sol#26) can be used in cross function reentrancies:\n\t- TraderPoolRiskyProposal._baseInProposal(uint256) (contracts/trader/TraderPoolRiskyProposal.sol#458-466)\n\t- TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#414-447)\n\t- TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#449-456)\n\t- TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412)\n\t- TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#56-65)\n\t- TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114)\n\t- TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#177-199)\n\t- TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#201-266)\n\t- TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#281-296)\n\t- TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[]) (contracts/trader/TraderPoolRiskyProposal.sol#355-360)\n\t- TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#362-378)\n\t- TraderPoolRiskyProposal.getInvestTokens(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#317-332)\n\t- TraderPoolRiskyProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#268-279)\n\t- TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175):\n\tExternal calls:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tState variables written after the call(s):\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n\t\t- [info.lpLocked += lpInvestment](contracts/trader/TraderPoolRiskyProposal.sol#L390)\n\t\t- [info.balanceBase += baseInvestment - baseToExchange](contracts/trader/TraderPoolRiskyProposal.sol#L391)\n\t\t- [info.balancePosition += amountGot](contracts/trader/TraderPoolRiskyProposal.sol#L402)\n\t[TraderPoolRiskyProposal._proposalInfos](contracts/trader/TraderPoolRiskyProposal.sol#L26) can be used in cross function reentrancies:\n\t- [TraderPoolRiskyProposal._baseInProposal(uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L458-L466)\n\t- [TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L414-L447)\n\t- [TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L449-L456)\n\t- [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412)\n\t- [TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L56-L65)\n\t- [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114)\n\t- [TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L177-L199)\n\t- [TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L201-L266)\n\t- [TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L281-L296)\n\t- [TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[])](contracts/trader/TraderPoolRiskyProposal.sol#L355-L360)\n\t- [TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L362-L378)\n\t- [TraderPoolRiskyProposal.getInvestTokens(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L317-L332)\n\t- [TraderPoolRiskyProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L268-L279)\n\t- [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L116-L175",
                        "id": "f526b19b74b6778a2a3e8987ee4562e69c6746e964a887505a087c0433801378",
                        "check": "reentrancy-eth",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "_investActivePortfolio",
                        "source_mapping": {
                            "start": 12605,
                            "length": 985,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412):\n\tExternal calls:\n\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tState variables written after the call(s):\n\t- info.balancePosition += amountGot (contracts/trader/TraderPoolRiskyProposal.sol#402)\n\tTraderPoolRiskyProposal._proposalInfos (contracts/trader/TraderPoolRiskyProposal.sol#26) can be used in cross function reentrancies:\n\t- TraderPoolRiskyProposal._baseInProposal(uint256) (contracts/trader/TraderPoolRiskyProposal.sol#458-466)\n\t- TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#414-447)\n\t- TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#449-456)\n\t- TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412)\n\t- TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#56-65)\n\t- TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114)\n\t- TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#177-199)\n\t- TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#201-266)\n\t- TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#281-296)\n\t- TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[]) (contracts/trader/TraderPoolRiskyProposal.sol#355-360)\n\t- TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType) (contracts/trader/TraderPoolRiskyProposal.sol#362-378)\n\t- TraderPoolRiskyProposal.getInvestTokens(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#317-332)\n\t- TraderPoolRiskyProposal.getProposalInfos(uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#268-279)\n\t- TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412):\n\tExternal calls:\n\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tState variables written after the call(s):\n\t- [info.balancePosition += amountGot](contracts/trader/TraderPoolRiskyProposal.sol#L402)\n\t[TraderPoolRiskyProposal._proposalInfos](contracts/trader/TraderPoolRiskyProposal.sol#L26) can be used in cross function reentrancies:\n\t- [TraderPoolRiskyProposal._baseInProposal(uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L458-L466)\n\t- [TraderPoolRiskyProposal._divestActivePortfolio(uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L414-L447)\n\t- [TraderPoolRiskyProposal._divestProposalTrader(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L449-L456)\n\t- [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412)\n\t- [TraderPoolRiskyProposal.changeProposalRestrictions(uint256,ITraderPoolRiskyProposal.ProposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L56-L65)\n\t- [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114)\n\t- [TraderPoolRiskyProposal.divest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L177-L199)\n\t- [TraderPoolRiskyProposal.exchange(uint256,address,uint256,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L201-L266)\n\t- [TraderPoolRiskyProposal.getActiveInvestmentsInfo(address,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L281-L296)\n\t- [TraderPoolRiskyProposal.getDivestAmounts(uint256[],uint256[])](contracts/trader/TraderPoolRiskyProposal.sol#L355-L360)\n\t- [TraderPoolRiskyProposal.getExchangeAmount(uint256,address,uint256,address[],ITraderPoolRiskyProposal.ExchangeType)](contracts/trader/TraderPoolRiskyProposal.sol#L362-L378)\n\t- [TraderPoolRiskyProposal.getInvestTokens(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L317-L332)\n\t- [TraderPoolRiskyProposal.getProposalInfos(uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L268-L279)\n\t- [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L380-L412",
                        "id": "d7b8f74ad7f3216b78bdd132a3098a8b2a4e4447aef64e79c95a1db2e3d07f5d",
                        "check": "reentrancy-no-eth",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "priceFeed.checkAllowance(baseToken)",
                        "source_mapping": {
                            "start": 3364,
                            "length": 35,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "95",
                            "starting_column": 9,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "create",
                                "source_mapping": {
                                    "start": 2157,
                                    "length": 1935,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\tState variables written after the call(s):\n\t- _proposalInfos[proposalId].descriptionURL = descriptionURL (contracts/trader/TraderPoolRiskyProposal.sol#98)\n\t- _proposalInfos[proposalId].token = token (contracts/trader/TraderPoolRiskyProposal.sol#99)\n\t- _proposalInfos[proposalId].tokenDecimals = ERC20(token).decimals() (contracts/trader/TraderPoolRiskyProposal.sol#100)\n\t- _proposalInfos[proposalId].proposalLimits = proposalLimits (contracts/trader/TraderPoolRiskyProposal.sol#101)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\tState variables written after the call(s):\n\t- [_proposalInfos[proposalId].descriptionURL = descriptionURL](contracts/trader/TraderPoolRiskyProposal.sol#L98)\n\t- [_proposalInfos[proposalId].token = token](contracts/trader/TraderPoolRiskyProposal.sol#L99)\n\t- [_proposalInfos[proposalId].tokenDecimals = ERC20(token).decimals()](contracts/trader/TraderPoolRiskyProposal.sol#L100)\n\t- [_proposalInfos[proposalId].proposalLimits = proposalLimits](contracts/trader/TraderPoolRiskyProposal.sol#L101)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "17e6850ce2820cb7072d5bd657d58496e89474d3cb028605e3ca9874b5b952eb",
                        "check": "reentrancy-benign",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)",
                        "source_mapping": {
                            "start": 5520,
                            "length": 66,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "153",
                            "starting_column": 9,
                            "ending_column": 75
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "invest",
                                "source_mapping": {
                                    "start": 4098,
                                    "length": 2153,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "invest(uint256,address,uint256,uint256,uint256)"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175):\n\tExternal calls:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,user,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#153)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tEvent emitted after the call(s):\n\t- ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot) (contracts/trader/TraderPoolRiskyProposal.sol#404-410)\n\t\t- _investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#166-173)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175):\n\tExternal calls:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,user,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L153)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tEvent emitted after the call(s):\n\t- [ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot)](contracts/trader/TraderPoolRiskyProposal.sol#L404-L410)\n\t\t- [_investActivePortfolio(proposalId,baseInvestment,baseToExchange,lpInvestment,new address[](0),minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L166-L173)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L116-L175",
                        "id": "054f6f687f2ca956e8f3e23aef27e6111279b5cf1e129aabc541390c5eec79d6",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "priceFeed.checkAllowance(baseToken)",
                        "source_mapping": {
                            "start": 3364,
                            "length": 35,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "95",
                            "starting_column": 9,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "create",
                                "source_mapping": {
                                    "start": 2157,
                                    "length": 1935,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\tEvent emitted after the call(s):\n\t- ProposalCreated(proposalId,token,proposalLimits) (contracts/trader/TraderPoolRiskyProposal.sol#103)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\tEvent emitted after the call(s):\n\t- [ProposalCreated(proposalId,token,proposalLimits)](contracts/trader/TraderPoolRiskyProposal.sol#L103)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "6b7886f74df8ee393e6b66d00c60ab6eaccaa60cae55fe8f5068fffb0f39bb96",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "priceFeed.checkAllowance(baseToken)",
                        "source_mapping": {
                            "start": 3364,
                            "length": 35,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "95",
                            "starting_column": 9,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "create",
                                "source_mapping": {
                                    "start": 2157,
                                    "length": 1935,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tEvent emitted after the call(s):\n\t- ProposalDivested(proposalId,user,lp2Amount,lpTransfer,baseTransfer) (contracts/trader/TraderPoolProposal.sol#209)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- ProposalInvested(proposalId,user,lpAmount,baseAmount,lp2Amount) (contracts/trader/TraderPoolProposal.sol#225)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- ProposalJoined(proposalId,user) (contracts/trader/TraderPoolProposal.sol#196)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- ProposalLeft(proposalId,user) (contracts/trader/TraderPoolProposal.sol#184)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t- TransferSingle(operator,address(0),to,id,amount) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#278)\n\t\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tEvent emitted after the call(s):\n\t- [ProposalDivested(proposalId,user,lp2Amount,lpTransfer,baseTransfer)](contracts/trader/TraderPoolProposal.sol#L209)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [ProposalInvested(proposalId,user,lpAmount,baseAmount,lp2Amount)](contracts/trader/TraderPoolProposal.sol#L225)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [ProposalJoined(proposalId,user)](contracts/trader/TraderPoolProposal.sol#L196)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [ProposalLeft(proposalId,user)](contracts/trader/TraderPoolProposal.sol#L184)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t- [TransferSingle(operator,address(0),to,id,amount)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L278)\n\t\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "747c88a60f5a7a55afbaa925b76d5df42e91e38942baf277958f1c1d134fdba4",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "_investActivePortfolio",
                        "source_mapping": {
                            "start": 12605,
                            "length": 985,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolRiskyProposal",
                                "source_mapping": {
                                    "start": 465,
                                    "length": 14905,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256) (contracts/trader/TraderPoolRiskyProposal.sol#380-412):\n\tExternal calls:\n\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tEvent emitted after the call(s):\n\t- ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot) (contracts/trader/TraderPoolRiskyProposal.sol#404-410)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal._investActivePortfolio(uint256,uint256,uint256,uint256,address[],uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L380-L412):\n\tExternal calls:\n\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tEvent emitted after the call(s):\n\t- [ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot)](contracts/trader/TraderPoolRiskyProposal.sol#L404-L410)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L380-L412",
                        "id": "960a3a121c15415885c7495f1454588d3098d55129442ccbc752eb6b427dbdec",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "priceFeed.checkAllowance(baseToken)",
                        "source_mapping": {
                            "start": 3364,
                            "length": 35,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "95",
                            "starting_column": 9,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "create",
                                "source_mapping": {
                                    "start": 2157,
                                    "length": 1935,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114):\n\tExternal calls:\n\t- priceFeed.checkAllowance(baseToken) (contracts/trader/TraderPoolRiskyProposal.sol#95)\n\t- priceFeed.checkAllowance(token) (contracts/trader/TraderPoolRiskyProposal.sol#96)\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- returndata = address(token).functionCall(data,SafeERC20: low-level call failed) (node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#93)\n\t\t- IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals)) (contracts/trader/TraderPoolProposal.sol#123-127)\n\t\t- response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data) (node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#428-436)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user) (contracts/trader/TraderPoolProposal.sol#194)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\t\t- ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user) (contracts/trader/TraderPoolProposal.sol#181)\n\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n\t\t- priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut) (contracts/libs/price-feed/PriceFeedLocal.sol#28-35)\n\t\t- amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#394-400)\n\tExternal calls sending eth:\n\t- _transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment) (contracts/trader/TraderPoolRiskyProposal.sol#105)\n\t\t- (success,returndata) = target.call{value: value}(data) (node_modules/@openzeppelin/contracts/utils/Address.sol#137)\n\tEvent emitted after the call(s):\n\t- ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot) (contracts/trader/TraderPoolRiskyProposal.sol#404-410)\n\t\t- _investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut) (contracts/trader/TraderPoolRiskyProposal.sol#106-113)\n",
                        "markdown": "Reentrancy in [TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114):\n\tExternal calls:\n\t- [priceFeed.checkAllowance(baseToken)](contracts/trader/TraderPoolRiskyProposal.sol#L95)\n\t- [priceFeed.checkAllowance(token)](contracts/trader/TraderPoolRiskyProposal.sol#L96)\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [returndata = address(token).functionCall(data,SafeERC20: low-level call failed)](node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol#L93)\n\t\t- [IERC20(_parentTraderPoolInfo.baseToken).safeTransferFrom(_parentTraderPoolInfo.parentPoolAddress,address(this),baseInvestment.from18(_parentTraderPoolInfo.baseTokenDecimals))](contracts/trader/TraderPoolProposal.sol#L123-L127)\n\t\t- [response = IERC1155ReceiverUpgradeable(to).onERC1155Received(operator,from,id,amount,data)](node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol#L428-L436)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkJoin(user)](contracts/trader/TraderPoolProposal.sol#L194)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\t\t- [ITraderPoolMemberHook(_parentTraderPoolInfo.parentPoolAddress).checkLeave(user)](contracts/trader/TraderPoolProposal.sol#L181)\n\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n\t\t- [priceFeed.normalizedExchangeFromExact(inToken,outToken,amountIn,optionalPath,minAmountOut)](contracts/libs/price-feed/PriceFeedLocal.sol#L28-L35)\n\t\t- [amountGot = priceFeed.normExchangeFromExact(_parentTraderPoolInfo.baseToken,info.token,baseToExchange,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L394-L400)\n\tExternal calls sending eth:\n\t- [_transferAndMintLP(proposalId,trader,lpInvestment,baseInvestment)](contracts/trader/TraderPoolRiskyProposal.sol#L105)\n\t\t- [(success,returndata) = target.call{value: value}(data)](node_modules/@openzeppelin/contracts/utils/Address.sol#L137)\n\tEvent emitted after the call(s):\n\t- [ProposalActivePortfolioExchanged(proposalId,_parentTraderPoolInfo.baseToken,info.token,baseToExchange,amountGot)](contracts/trader/TraderPoolRiskyProposal.sol#L404-L410)\n\t\t- [_investActivePortfolio(proposalId,baseInvestment,baseInvestment.percentage(instantTradePercentage),lpInvestment,optionalPath,minPositionOut)](contracts/trader/TraderPoolRiskyProposal.sol#L106-L113)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "df7fe1ae0f5beb75e531b2cc9dc3c0c9bd60f33f1a585c031a8548d5e67caa79",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "invest",
                        "source_mapping": {
                            "start": 3614,
                            "length": 983,
                            "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                            "is_dependency": false,
                            "lines": "95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolInvestProposal",
                                "source_mapping": {
                                    "start": 543,
                                    "length": 11912,
                                    "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "invest(uint256,address,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "TraderPoolInvestProposal.invest(uint256,address,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#95-122) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPIP: proposal is closed) (contracts/trader/TraderPoolInvestProposal.sol#105-109)\n",
                        "markdown": "[TraderPoolInvestProposal.invest(uint256,address,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L95-L122) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPIP: proposal is closed)](contracts/trader/TraderPoolInvestProposal.sol#L105-L109)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolInvestProposal.sol#L95-L122",
                        "id": "24f4057e09668c1a53a382f0af41689fd8df1c2e43583241957388c9be25e7f8",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPRP: wrong timestamp)",
                        "source_mapping": {
                            "start": 2693,
                            "length": 154,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "79, 80, 81, 82",
                            "starting_column": 9,
                            "ending_column": 10
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "create",
                                "source_mapping": {
                                    "start": 2157,
                                    "length": 1935,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[]) (contracts/trader/TraderPoolRiskyProposal.sol#67-114) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPRP: wrong timestamp) (contracts/trader/TraderPoolRiskyProposal.sol#79-82)\n",
                        "markdown": "[TraderPoolRiskyProposal.create(string,address,ITraderPoolRiskyProposal.ProposalLimits,uint256,uint256,uint256,uint256,address[])](contracts/trader/TraderPoolRiskyProposal.sol#L67-L114) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPRP: wrong timestamp)](contracts/trader/TraderPoolRiskyProposal.sol#L79-L82)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L67-L114",
                        "id": "2a0842fd6de4d4909d734a051b718c5e4dfdc8bcb289fb992899502a9831e2ac",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPRP: proposal is closed)",
                        "source_mapping": {
                            "start": 4461,
                            "length": 183,
                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                            "is_dependency": false,
                            "lines": "127, 128, 129, 130, 131",
                            "starting_column": 9,
                            "ending_column": 10
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "invest",
                                "source_mapping": {
                                    "start": 4098,
                                    "length": 2153,
                                    "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                    "is_dependency": false,
                                    "lines": "116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPoolRiskyProposal",
                                        "source_mapping": {
                                            "start": 465,
                                            "length": 14905,
                                            "filename_relative": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolRiskyProposal.sol",
                                            "filename_short": "contracts/trader/TraderPoolRiskyProposal.sol",
                                            "is_dependency": false,
                                            "lines": "16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "invest(uint256,address,uint256,uint256,uint256)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256) (contracts/trader/TraderPoolRiskyProposal.sol#116-175) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPRP: proposal is closed) (contracts/trader/TraderPoolRiskyProposal.sol#127-131)\n",
                        "markdown": "[TraderPoolRiskyProposal.invest(uint256,address,uint256,uint256,uint256)](contracts/trader/TraderPoolRiskyProposal.sol#L116-L175) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(info.proposalLimits.timestampLimit == 0 || block.timestamp <= info.proposalLimits.timestampLimit,TPRP: proposal is closed)](contracts/trader/TraderPoolRiskyProposal.sol#L127-L131)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolRiskyProposal.sol#L116-L175",
                        "id": "398f184307d7fb10e6652a5f8d9686b3b7e9fa68a92152e85cee579b975dbe6f",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "create",
                        "source_mapping": {
                            "start": 2379,
                            "length": 1229,
                            "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                            "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                            "is_dependency": false,
                            "lines": "63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPoolInvestProposal",
                                "source_mapping": {
                                    "start": 543,
                                    "length": 11912,
                                    "filename_relative": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPoolInvestProposal.sol",
                                    "filename_short": "contracts/trader/TraderPoolInvestProposal.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)"
                        }
                    },
                    "detector": {
                        "description": "TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256) (contracts/trader/TraderPoolInvestProposal.sol#63-93) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPIP: wrong timestamp) (contracts/trader/TraderPoolInvestProposal.sol#69-72)\n",
                        "markdown": "[TraderPoolInvestProposal.create(string,ITraderPoolInvestProposal.ProposalLimits,uint256,uint256)](contracts/trader/TraderPoolInvestProposal.sol#L63-L93) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(proposalLimits.timestampLimit == 0 || proposalLimits.timestampLimit >= block.timestamp,TPIP: wrong timestamp)](contracts/trader/TraderPoolInvestProposal.sol#L69-L72)\n",
                        "first_markdown_element": "contracts/trader/TraderPoolInvestProposal.sol#L63-L93",
                        "id": "d154fd28810dc31ed9c49f3daf3c6d744f5636a9664b6ae0e72f119c417223e4",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Inconsistent Data - Unused Return Value",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 252,
            "vulnerability_class": "Validation",
            "vulnerability_subclass": "Unchecked Return Value",
            "vulnerable_functions": [
                "Insurance::buyInsurance()",
                "Insurance::_payout()",
                "Insurance::withdraw()"
            ],
            "lines": "54-58, 151-167, 70-87",
            "description": "Multiple functions perform transfer calls on the _dexe token but ignore the return value.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "_payout",
                        "source_mapping": {
                            "start": 4992,
                            "length": 497,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_payout(address,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance._payout(address,uint256) (contracts/insurance/Insurance.sol#151-166) ignores return value by _dexe.transfer(user,payout) (contracts/insurance/Insurance.sol#163)\n",
                        "markdown": "[Insurance._payout(address,uint256)](contracts/insurance/Insurance.sol#L151-L166) ignores return value by [_dexe.transfer(user,payout)](contracts/insurance/Insurance.sol#L163)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L151-L166",
                        "id": "49a82f54c479de826f511dfc0f0eb5990bfb9554f92c11d91197e060e0f6fff4",
                        "check": "unchecked-transfer",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "withdraw",
                        "source_mapping": {
                            "start": 2340,
                            "length": 613,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "withdraw(uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance.withdraw(uint256) (contracts/insurance/Insurance.sol#70-87) ignores return value by _dexe.transfer(msg.sender,amountToWithdraw) (contracts/insurance/Insurance.sol#84)\n",
                        "markdown": "[Insurance.withdraw(uint256)](contracts/insurance/Insurance.sol#L70-L87) ignores return value by [_dexe.transfer(msg.sender,amountToWithdraw)](contracts/insurance/Insurance.sol#L84)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L70-L87",
                        "id": "aa3930693de93f87b4f120b5f4d7321536c781bf4de8e609eeeaaf330d9be016",
                        "check": "unchecked-transfer",
                        "impact": "High",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "_payout",
                        "source_mapping": {
                            "start": 4992,
                            "length": 497,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_payout(address,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance._payout(address,uint256) (contracts/insurance/Insurance.sol#151-166) has external calls inside a loop: _dexe.transfer(user,payout) (contracts/insurance/Insurance.sol#163)\n",
                        "markdown": "[Insurance._payout(address,uint256)](contracts/insurance/Insurance.sol#L151-L166) has external calls inside a loop: [_dexe.transfer(user,payout)](contracts/insurance/Insurance.sol#L163)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L151-L166",
                        "id": "99b967ba8c91e85960fc93d2059b84ac97650d51f073262385f457768b466af8",
                        "check": "calls-loop",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "_payout",
                        "source_mapping": {
                            "start": 4992,
                            "length": 497,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_payout(address,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance._payout(address,uint256) (contracts/insurance/Insurance.sol#151-166) has external calls inside a loop: stakePayout = (insurancePayout / _coreProperties.getInsuranceFactor()).min(userInfo.stake) (contracts/insurance/Insurance.sol#154-156)\n",
                        "markdown": "[Insurance._payout(address,uint256)](contracts/insurance/Insurance.sol#L151-L166) has external calls inside a loop: [stakePayout = (insurancePayout / _coreProperties.getInsuranceFactor()).min(userInfo.stake)](contracts/insurance/Insurance.sol#L154-L156)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L151-L166",
                        "id": "b918705e655b777d5676f1e2105955370976e67d9628fcaec4a1c6a95d39a583",
                        "check": "calls-loop",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "node",
                        "name": "_dexe.transfer(user,payout)",
                        "source_mapping": {
                            "start": 5404,
                            "length": 28,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "163",
                            "starting_column": 9,
                            "ending_column": 37
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "_payout",
                                "source_mapping": {
                                    "start": 4992,
                                    "length": 497,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "Insurance",
                                        "source_mapping": {
                                            "start": 743,
                                            "length": 4748,
                                            "filename_relative": "contracts/insurance/Insurance.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                            "filename_short": "contracts/insurance/Insurance.sol",
                                            "is_dependency": false,
                                            "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "_payout(address,uint256)"
                                }
                            }
                        },
                        "additional_fields": {
                            "underlying_type": "external_calls_sending_eth"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in Insurance.acceptClaim(string,address[],uint256[]) (contracts/insurance/Insurance.sol#89-115):\n\tExternal calls:\n\t- amounts[i_scope_0] = _payout(users[i_scope_0],amounts[i_scope_0]) (contracts/insurance/Insurance.sol#110)\n\t\t- _dexe.transfer(user,payout) (contracts/insurance/Insurance.sol#163)\n\tState variables written after the call(s):\n\t- _acceptedClaimsInfo[url] = AcceptedClaims(users,amounts) (contracts/insurance/Insurance.sol#114)\n",
                        "markdown": "Reentrancy in [Insurance.acceptClaim(string,address[],uint256[])](contracts/insurance/Insurance.sol#L89-L115):\n\tExternal calls:\n\t- [amounts[i_scope_0] = _payout(users[i_scope_0],amounts[i_scope_0])](contracts/insurance/Insurance.sol#L110)\n\t\t- [_dexe.transfer(user,payout)](contracts/insurance/Insurance.sol#L163)\n\tState variables written after the call(s):\n\t- [_acceptedClaimsInfo[url] = AcceptedClaims(users,amounts)](contracts/insurance/Insurance.sol#L114)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L89-L115",
                        "id": "42ebe54af535bab3daa1bdb1d06c8fcfbd2d039903503f19637ef6170a8c5e51",
                        "check": "reentrancy-benign",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "_payout",
                        "source_mapping": {
                            "start": 4992,
                            "length": 497,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_payout(address,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in Insurance._payout(address,uint256) (contracts/insurance/Insurance.sol#151-166):\n\tExternal calls:\n\t- _dexe.transfer(user,payout) (contracts/insurance/Insurance.sol#163)\n\tEvent emitted after the call(s):\n\t- Paidout(payout,stakePayout,user) (contracts/insurance/Insurance.sol#165)\n",
                        "markdown": "Reentrancy in [Insurance._payout(address,uint256)](contracts/insurance/Insurance.sol#L151-L166):\n\tExternal calls:\n\t- [_dexe.transfer(user,payout)](contracts/insurance/Insurance.sol#L163)\n\tEvent emitted after the call(s):\n\t- [Paidout(payout,stakePayout,user)](contracts/insurance/Insurance.sol#L165)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L151-L166",
                        "id": "5252fdbde89c73d26042c7e8a4c167bc93e558ca21e732b9f022fe1cb6c0017f",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "withdraw",
                        "source_mapping": {
                            "start": 2340,
                            "length": 613,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "withdraw(uint256)"
                        }
                    },
                    "detector": {
                        "description": "Reentrancy in Insurance.withdraw(uint256) (contracts/insurance/Insurance.sol#70-87):\n\tExternal calls:\n\t- _dexe.transfer(msg.sender,amountToWithdraw) (contracts/insurance/Insurance.sol#84)\n\tEvent emitted after the call(s):\n\t- Withdrawn(amountToWithdraw,msg.sender) (contracts/insurance/Insurance.sol#86)\n",
                        "markdown": "Reentrancy in [Insurance.withdraw(uint256)](contracts/insurance/Insurance.sol#L70-L87):\n\tExternal calls:\n\t- [_dexe.transfer(msg.sender,amountToWithdraw)](contracts/insurance/Insurance.sol#L84)\n\tEvent emitted after the call(s):\n\t- [Withdrawn(amountToWithdraw,msg.sender)](contracts/insurance/Insurance.sol#L86)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L70-L87",
                        "id": "ecd2b6335d26766dfffa358313016a23e106e0407ea8a61d83f073783a6ea2a0",
                        "check": "reentrancy-events",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "withdraw",
                        "source_mapping": {
                            "start": 2340,
                            "length": 613,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "withdraw(uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance.withdraw(uint256) (contracts/insurance/Insurance.sol#70-87) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- require(bool,string)(userInfo.lastDepositTimestamp + _coreProperties.getInsuranceWithdrawalLock() < block.timestamp,Insurance: lock is not over) (contracts/insurance/Insurance.sol#73-77)\n",
                        "markdown": "[Insurance.withdraw(uint256)](contracts/insurance/Insurance.sol#L70-L87) uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [require(bool,string)(userInfo.lastDepositTimestamp + _coreProperties.getInsuranceWithdrawalLock() < block.timestamp,Insurance: lock is not over)](contracts/insurance/Insurance.sol#L73-L77)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L70-L87",
                        "id": "00bea26ea8a39c480fb3eaac6c38aa08e4100261976c6ad6dbfa974b82f69530",
                        "check": "timestamp",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "_payout",
                        "source_mapping": {
                            "start": 4992,
                            "length": 497,
                            "filename_relative": "contracts/insurance/Insurance.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                            "filename_short": "contracts/insurance/Insurance.sol",
                            "is_dependency": false,
                            "lines": "151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "Insurance",
                                "source_mapping": {
                                    "start": 743,
                                    "length": 4748,
                                    "filename_relative": "contracts/insurance/Insurance.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/insurance/Insurance.sol",
                                    "filename_short": "contracts/insurance/Insurance.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "_payout(address,uint256)"
                        }
                    },
                    "detector": {
                        "description": "Insurance._payout(address,uint256) (contracts/insurance/Insurance.sol#151-166) has costly operations inside a loop:\n\t- _poolReserved -= stakePayout (contracts/insurance/Insurance.sol#159)\n",
                        "markdown": "[Insurance._payout(address,uint256)](contracts/insurance/Insurance.sol#L151-L166) has costly operations inside a loop:\n\t- [_poolReserved -= stakePayout](contracts/insurance/Insurance.sol#L159)\n",
                        "first_markdown_element": "contracts/insurance/Insurance.sol#L151-L166",
                        "id": "515655b8d8cc53bfdc9132bc2505c7884ce14fcdae56ba77d7616ffe7d6d01e6",
                        "check": "costly-loop",
                        "impact": "Informational",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Best Practice Violation - Unfinalized Functionality",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 190,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Improper Enforcement of Behavioral Workflow",
            "vulnerable_functions": [
                "GovValidators::createExternalProposal()"
            ],
            "lines": "115-130",
            "description": "It is not possible to execute an external proposal even if a quorum is reached. This may lead to double execution of the proposal off-chain as the proposal state could not be updated."
        },
        {
            "title": "Contradiction - Denial of Service",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 691,
            "vulnerability_class": "Denial of Service",
            "vulnerability_subclass": "Insufficient Control Flow Management",
            "vulnerable_functions": [
                "GovValidators::onlyValidator()"
            ],
            "lines": "43-46",
            "description": "The onlyValidator modifier uses current user balances to identify validators. However, voting is only possible for those who have balances at the moment of proposal creation. This may lead to an inability to reach a quorum on proposals due to some validators not passing the modifier."
        },
        {
            "title": "Contradiction - Invalid Return Action",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 703,
            "vulnerability_class": "Validation",
            "vulnerability_subclass": "Improper Check or Handling of Exceptional Conditions",
            "vulnerable_functions": [
                "PoolFactory::predictGovAddress()"
            ],
            "lines": "231",
            "description": "The function contains the check (bytes(poolName).length == 0) which returns address(0). This might cause a logic error, because the relying code might not expect a zero address. Instead, an error should be thrown clearly marking that the input parameter is invalid."
        },
        {
            "title": "Inconsistent Data - Sign of Unfinalized Code",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 1068,
            "vulnerability_class": "Logic Flaw",
            "vulnerability_subclass": "Documentation",
            "vulnerable_functions": [
                "PoolFactory::_validateGovPoolWithTokenSaleParameters()"
            ],
            "lines": "423-432",
            "description": "The _validateGovPoolWithTokenSaleParameters function contains the check require(parameters. ... Executors[0] == address(0)). If the value should always be equal to 0x0 it may be directly overwritten there."
        },
        {
            "title": "Best Practice Violation - Unstable Import",
            "reported_impact": "Medium",
            "reported_likelihood": "Medium",
            "cwe_classification": 1104,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Use of Unmaintained Third Party Components",
            "vulnerable_functions": [],
            "lines": "",
            "description": "The project allows different versions of a custom import @dlsl/dev-modules: ^1.8.1. This may lead to unexpected and untested code being deployed."
        },
        {
            "title": "Floating Pragma",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 1104,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Use of Unmaintained Third Party Components",
            "vulnerable_functions": [],
            "lines": "",
            "description": "Locking the pragma helps ensure that contracts do not accidentally get deployed using an outdated compiler version"
        },
        {
            "title": "Redundant Import",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 1164,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Irrelevant Code",
            "vulnerable_functions": [],
            "lines": "",
            "description": "Unused imports should be removed from the contracts."
        },
        {
            "title": "Missing Events",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 778,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Missing Events",
            "vulnerable_functions": [
                "PriceFeed::addPathTokens()",
                "PriceFeed::removePathTokens()",
                "CoreProperties::*"
            ],
            "lines": "56-58, 60-62",
            "description": "Events for critical state changes should be emitted for tracking things off-chain.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "removePathTokens",
                        "source_mapping": {
                            "start": 2427,
                            "length": 132,
                            "filename_relative": "contracts/core/PriceFeed.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/PriceFeed.sol",
                            "filename_short": "contracts/core/PriceFeed.sol",
                            "is_dependency": false,
                            "lines": "60, 61, 62",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "PriceFeed",
                                "source_mapping": {
                                    "start": 943,
                                    "length": 10857,
                                    "filename_relative": "contracts/core/PriceFeed.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/PriceFeed.sol",
                                    "filename_short": "contracts/core/PriceFeed.sol",
                                    "is_dependency": false,
                                    "lines": "25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "removePathTokens(address[])"
                        }
                    },
                    "detector": {
                        "description": "PriceFeed.removePathTokens(address[]) (contracts/core/PriceFeed.sol#60-62) ignores return value by _pathTokens.remove(pathTokens) (contracts/core/PriceFeed.sol#61)\n",
                        "markdown": "[PriceFeed.removePathTokens(address[])](contracts/core/PriceFeed.sol#L60-L62) ignores return value by [_pathTokens.remove(pathTokens)](contracts/core/PriceFeed.sol#L61)\n",
                        "first_markdown_element": "contracts/core/PriceFeed.sol#L60-L62",
                        "id": "05abb1779c4c6ef9521ca6342b5429047c92b6083058e7ddeee06e1f2181a8b9",
                        "check": "unused-return",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "removeWhitelistTokens",
                        "source_mapping": {
                            "start": 1937,
                            "length": 134,
                            "filename_relative": "contracts/core/CoreProperties.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/CoreProperties.sol",
                            "filename_short": "contracts/core/CoreProperties.sol",
                            "is_dependency": false,
                            "lines": "57, 58, 59",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "CoreProperties",
                                "source_mapping": {
                                    "start": 551,
                                    "length": 8727,
                                    "filename_relative": "contracts/core/CoreProperties.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/CoreProperties.sol",
                                    "filename_short": "contracts/core/CoreProperties.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "removeWhitelistTokens(address[])"
                        }
                    },
                    "detector": {
                        "description": "CoreProperties.removeWhitelistTokens(address[]) (contracts/core/CoreProperties.sol#57-59) ignores return value by _whitelistTokens.remove(tokens) (contracts/core/CoreProperties.sol#58)\n",
                        "markdown": "[CoreProperties.removeWhitelistTokens(address[])](contracts/core/CoreProperties.sol#L57-L59) ignores return value by [_whitelistTokens.remove(tokens)](contracts/core/CoreProperties.sol#L58)\n",
                        "first_markdown_element": "contracts/core/CoreProperties.sol#L57-L59",
                        "id": "38af00e5a2e116b0399774123b88612aab14b9348a473b6c78596c5ac568eafa",
                        "check": "unused-return",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "addBlacklistTokens",
                        "source_mapping": {
                            "start": 2077,
                            "length": 128,
                            "filename_relative": "contracts/core/CoreProperties.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/CoreProperties.sol",
                            "filename_short": "contracts/core/CoreProperties.sol",
                            "is_dependency": false,
                            "lines": "61, 62, 63",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "CoreProperties",
                                "source_mapping": {
                                    "start": 551,
                                    "length": 8727,
                                    "filename_relative": "contracts/core/CoreProperties.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/CoreProperties.sol",
                                    "filename_short": "contracts/core/CoreProperties.sol",
                                    "is_dependency": false,
                                    "lines": "18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "addBlacklistTokens(address[])"
                        }
                    },
                    "detector": {
                        "description": "CoreProperties.addBlacklistTokens(address[]) (contracts/core/CoreProperties.sol#61-63) ignores return value by _blacklistTokens.add(tokens) (contracts/core/CoreProperties.sol#62)\n",
                        "markdown": "[CoreProperties.addBlacklistTokens(address[])](contracts/core/CoreProperties.sol#L61-L63) ignores return value by [_blacklistTokens.add(tokens)](contracts/core/CoreProperties.sol#L62)\n",
                        "first_markdown_element": "contracts/core/CoreProperties.sol#L61-L63",
                        "id": "3c0fffab6cd2bd3e5b160a7144d58e5a51c12ed50c11a55d1fd3484f389b861f",
                        "check": "unused-return",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "addPathTokens",
                        "source_mapping": {
                            "start": 2295,
                            "length": 126,
                            "filename_relative": "contracts/core/PriceFeed.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/PriceFeed.sol",
                            "filename_short": "contracts/core/PriceFeed.sol",
                            "is_dependency": false,
                            "lines": "56, 57, 58",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "PriceFeed",
                                "source_mapping": {
                                    "start": 943,
                                    "length": 10857,
                                    "filename_relative": "contracts/core/PriceFeed.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/core/PriceFeed.sol",
                                    "filename_short": "contracts/core/PriceFeed.sol",
                                    "is_dependency": false,
                                    "lines": "25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "addPathTokens(address[])"
                        }
                    },
                    "detector": {
                        "description": "PriceFeed.addPathTokens(address[]) (contracts/core/PriceFeed.sol#56-58) ignores return value by _pathTokens.add(pathTokens) (contracts/core/PriceFeed.sol#57)\n",
                        "markdown": "[PriceFeed.addPathTokens(address[])](contracts/core/PriceFeed.sol#L56-L58) ignores return value by [_pathTokens.add(pathTokens)](contracts/core/PriceFeed.sol#L57)\n",
                        "first_markdown_element": "contracts/core/PriceFeed.sol#L56-L58",
                        "id": "54f610bbd74420a78aabe5d069c00e5c0cfcba681d3b7230625a837904fa2e1f",
                        "check": "unused-return",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                }
            ]
        },
        {
            "title": "Unindexed Events",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 696,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Improper Adherence to Coding Standards",
            "vulnerable_functions": [
                "PoolFactory::*",
                "TraderPool::*"
            ],
            "lines": "",
            "description": "Having indexed parameters in the events makes it easier to search for these events using indexed parameters as filters."
        },
        {
            "title": "Function Which May Be Declared Private",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 710,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Improper Adherence to Coding Standards",
            "vulnerable_functions": [
                "PoolFactory::*"
            ],
            "lines": "",
            "description": "There is no added value in declaring non-public functions as internal in a non-inherited contract."
        },
        {
            "title": "Redundant Statement",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 1164,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Irrelevant Code",
            "vulnerable_functions": [
                "GovValidatorsToken::mint()",
                "GovValidatorsToken::burn()"
            ],
            "lines": "20, 24",
            "description": "The onlyValidator check on the functions is redundant as the functions call _beforeTokenTransfer functions internally, which is under the modifier."
        },
        {
            "title": "Missing Zero Address Validation",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 20,
            "vulnerability_class": "Validation",
            "vulnerability_subclass": "Missing Zero Address Validation",
            "vulnerable_functions": [
                "GovPool::__GovPool_init()",
                "GovSettings::__GovSettings_init()",
                "BasicTraderPool::__BasicTraderPool_init()",
                "InvestTraderPool:: __InvestTraderPool_init()"
            ],
            "lines": "104-132, 19-61, 30-47, 33-50",
            "description": "Address parameters are used without checking against the possibility of 0x0.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "variable",
                        "name": "name",
                        "source_mapping": {
                            "start": 750,
                            "length": 20,
                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                            "is_dependency": false,
                            "lines": "31",
                            "starting_column": 9,
                            "ending_column": 29
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__BasicTraderPool_init",
                                "source_mapping": {
                                    "start": 709,
                                    "length": 444,
                                    "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                    "filename_short": "contracts/trader/BasicTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "BasicTraderPool",
                                        "source_mapping": {
                                            "start": 198,
                                            "length": 4511,
                                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address).name (contracts/trader/BasicTraderPool.sol#31) shadows:\n\t- ERC20Upgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#67-69) (function)\n\t- IERC20MetadataUpgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)\n",
                        "markdown": "[BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address).name](contracts/trader/BasicTraderPool.sol#L31) shadows:\n\t- [ERC20Upgradeable.name()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#L67-L69) (function)\n\t- [IERC20MetadataUpgradeable.name()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#L17) (function)\n",
                        "first_markdown_element": "contracts/trader/BasicTraderPool.sol#L31",
                        "id": "a684c641b6254f924a8d4fc078e108caafcab255af517a260a44325283c6bd28",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "symbol",
                        "source_mapping": {
                            "start": 780,
                            "length": 22,
                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                            "is_dependency": false,
                            "lines": "32",
                            "starting_column": 9,
                            "ending_column": 31
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__BasicTraderPool_init",
                                "source_mapping": {
                                    "start": 709,
                                    "length": 444,
                                    "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                    "filename_short": "contracts/trader/BasicTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "BasicTraderPool",
                                        "source_mapping": {
                                            "start": 198,
                                            "length": 4511,
                                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address).symbol (contracts/trader/BasicTraderPool.sol#32) shadows:\n\t- ERC20Upgradeable.symbol() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#75-77) (function)\n\t- IERC20MetadataUpgradeable.symbol() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)\n",
                        "markdown": "[BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address).symbol](contracts/trader/BasicTraderPool.sol#L32) shadows:\n\t- [ERC20Upgradeable.symbol()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#L75-L77) (function)\n\t- [IERC20MetadataUpgradeable.symbol()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#L22) (function)\n",
                        "first_markdown_element": "contracts/trader/BasicTraderPool.sol#L32",
                        "id": "d0f2a3eea3cbc8f8d3c3b5a2142d2f8c086e8034851d891f5f440d88e813f367",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_poolParameters",
                        "source_mapping": {
                            "start": 812,
                            "length": 51,
                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                            "is_dependency": false,
                            "lines": "33",
                            "starting_column": 9,
                            "ending_column": 60
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__BasicTraderPool_init",
                                "source_mapping": {
                                    "start": 709,
                                    "length": 444,
                                    "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                    "filename_short": "contracts/trader/BasicTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "BasicTraderPool",
                                        "source_mapping": {
                                            "start": 198,
                                            "length": 4511,
                                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters (contracts/trader/BasicTraderPool.sol#33) shadows:\n\t- TraderPool._poolParameters (contracts/trader/TraderPool.sol#39) (state variable)\n",
                        "markdown": "[BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters](contracts/trader/BasicTraderPool.sol#L33) shadows:\n\t- [TraderPool._poolParameters](contracts/trader/TraderPool.sol#L39) (state variable)\n",
                        "first_markdown_element": "contracts/trader/BasicTraderPool.sol#L33",
                        "id": "e4d356f444fc2a30640cf9e8e6602b6f090283767467f5ce2a512b1dfa8f2e6b",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "distributionProposalAddress",
                        "source_mapping": {
                            "start": 3788,
                            "length": 35,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "107",
                            "starting_column": 9,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__GovPool_init",
                                "source_mapping": {
                                    "start": 3682,
                                    "length": 966,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPool",
                                        "source_mapping": {
                                            "start": 1333,
                                            "length": 15251,
                                            "filename_relative": "contracts/gov/GovPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                            "filename_short": "contracts/gov/GovPool.sol",
                                            "is_dependency": false,
                                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string).distributionProposalAddress (contracts/gov/GovPool.sol#107) lacks a zero-check on :\n\t\t- _distributionProposal = distributionProposalAddress (contracts/gov/GovPool.sol#119)\n",
                        "markdown": "[GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string).distributionProposalAddress](contracts/gov/GovPool.sol#L107) lacks a zero-check on :\n\t\t- [_distributionProposal = distributionProposalAddress](contracts/gov/GovPool.sol#L119)\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L107",
                        "id": "a70d20e4812fbd54cdbf34fa9f67f8bd14d1f3661779a7242762c5b74621d472",
                        "check": "missing-zero-check",
                        "impact": "Low",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_descriptionURL",
                        "source_mapping": {
                            "start": 3997,
                            "length": 31,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "113",
                            "starting_column": 9,
                            "ending_column": 40
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__GovPool_init",
                                "source_mapping": {
                                    "start": 3682,
                                    "length": 966,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPool",
                                        "source_mapping": {
                                            "start": 1333,
                                            "length": 15251,
                                            "filename_relative": "contracts/gov/GovPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                            "filename_short": "contracts/gov/GovPool.sol",
                                            "is_dependency": false,
                                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._descriptionURL (contracts/gov/GovPool.sol#113) is not in mixedCase\n",
                        "markdown": "Parameter [GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._descriptionURL](contracts/gov/GovPool.sol#L113) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L113",
                        "id": "0e459f2d5ce07a147f5ae6b67562889c5204bd5004aaeadd5b030f976e887c0b",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_deployerBABTid",
                        "source_mapping": {
                            "start": 3964,
                            "length": 23,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "112",
                            "starting_column": 9,
                            "ending_column": 32
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__GovPool_init",
                                "source_mapping": {
                                    "start": 3682,
                                    "length": 966,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPool",
                                        "source_mapping": {
                                            "start": 1333,
                                            "length": 15251,
                                            "filename_relative": "contracts/gov/GovPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                            "filename_short": "contracts/gov/GovPool.sol",
                                            "is_dependency": false,
                                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._deployerBABTid (contracts/gov/GovPool.sol#112) is not in mixedCase\n",
                        "markdown": "Parameter [GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._deployerBABTid](contracts/gov/GovPool.sol#L112) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L112",
                        "id": "44fdfe5f960b26475498b032307b8c86c99216f1e8a55a84bec6d03bf0ebfcec",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "__BasicTraderPool_init",
                        "source_mapping": {
                            "start": 709,
                            "length": 444,
                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                            "is_dependency": false,
                            "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "BasicTraderPool",
                                "source_mapping": {
                                    "start": 198,
                                    "length": 4511,
                                    "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                    "filename_short": "contracts/trader/BasicTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                        },
                        "additional_fields": {
                            "target": "function",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Function BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address) (contracts/trader/BasicTraderPool.sol#30-41) is not in mixedCase\n",
                        "markdown": "Function [BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)](contracts/trader/BasicTraderPool.sol#L30-L41) is not in mixedCase\n",
                        "first_markdown_element": "contracts/trader/BasicTraderPool.sol#L30-L41",
                        "id": "69981db3ebe4d4981320d35e11f5f8b5baaae181d73aa1d33e3041a87232e036",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_verifier",
                        "source_mapping": {
                            "start": 3906,
                            "length": 17,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "110",
                            "starting_column": 9,
                            "ending_column": 26
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__GovPool_init",
                                "source_mapping": {
                                    "start": 3682,
                                    "length": 966,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPool",
                                        "source_mapping": {
                                            "start": 1333,
                                            "length": 15251,
                                            "filename_relative": "contracts/gov/GovPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                            "filename_short": "contracts/gov/GovPool.sol",
                                            "is_dependency": false,
                                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._verifier (contracts/gov/GovPool.sol#110) is not in mixedCase\n",
                        "markdown": "Parameter [GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._verifier](contracts/gov/GovPool.sol#L110) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L110",
                        "id": "83b5a30ee317934c818c5e636a3ca4d66d1ee1b0a736b0b2e5ee2211a7c9669d",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "__GovSettings_init",
                        "source_mapping": {
                            "start": 623,
                            "length": 1737,
                            "filename_relative": "contracts/gov/settings/GovSettings.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/settings/GovSettings.sol",
                            "filename_short": "contracts/gov/settings/GovSettings.sol",
                            "is_dependency": false,
                            "lines": "19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "GovSettings",
                                "source_mapping": {
                                    "start": 226,
                                    "length": 4866,
                                    "filename_relative": "contracts/gov/settings/GovSettings.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/settings/GovSettings.sol",
                                    "filename_short": "contracts/gov/settings/GovSettings.sol",
                                    "is_dependency": false,
                                    "lines": "10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "__GovSettings_init(address,address,address,address,IGovSettings.ProposalSettings[],address[])"
                        },
                        "additional_fields": {
                            "target": "function",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Function GovSettings.__GovSettings_init(address,address,address,address,IGovSettings.ProposalSettings[],address[]) (contracts/gov/settings/GovSettings.sol#19-61) is not in mixedCase\n",
                        "markdown": "Function [GovSettings.__GovSettings_init(address,address,address,address,IGovSettings.ProposalSettings[],address[])](contracts/gov/settings/GovSettings.sol#L19-L61) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/settings/GovSettings.sol#L19-L61",
                        "id": "8e69142de87aa5a4333ab4a2d6f202ffb4791d23d93b16e1c487a897ebebe28f",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "__GovPool_init",
                        "source_mapping": {
                            "start": 3682,
                            "length": 966,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "GovPool",
                                "source_mapping": {
                                    "start": 1333,
                                    "length": 15251,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                        },
                        "additional_fields": {
                            "target": "function",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Function GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string) (contracts/gov/GovPool.sol#104-132) is not in mixedCase\n",
                        "markdown": "Function [GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)](contracts/gov/GovPool.sol#L104-L132) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L104-L132",
                        "id": "adef818dcb82a90004dc8ef06ea414a91c0b5cec6782cd105aa3fe219ae88c8b",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_onlyBABTHolders",
                        "source_mapping": {
                            "start": 3933,
                            "length": 21,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "111",
                            "starting_column": 9,
                            "ending_column": 30
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__GovPool_init",
                                "source_mapping": {
                                    "start": 3682,
                                    "length": 966,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPool",
                                        "source_mapping": {
                                            "start": 1333,
                                            "length": 15251,
                                            "filename_relative": "contracts/gov/GovPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                            "filename_short": "contracts/gov/GovPool.sol",
                                            "is_dependency": false,
                                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._onlyBABTHolders (contracts/gov/GovPool.sol#111) is not in mixedCase\n",
                        "markdown": "Parameter [GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._onlyBABTHolders](contracts/gov/GovPool.sol#L111) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L111",
                        "id": "baaf666b3bfb15784b4a62435d0d32299c7f7ca33fdfb7702c9842d7486da10c",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_poolParameters",
                        "source_mapping": {
                            "start": 812,
                            "length": 51,
                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                            "is_dependency": false,
                            "lines": "33",
                            "starting_column": 9,
                            "ending_column": 60
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__BasicTraderPool_init",
                                "source_mapping": {
                                    "start": 709,
                                    "length": 444,
                                    "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                    "filename_short": "contracts/trader/BasicTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "BasicTraderPool",
                                        "source_mapping": {
                                            "start": 198,
                                            "length": 4511,
                                            "filename_relative": "contracts/trader/BasicTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/BasicTraderPool.sol",
                                            "filename_short": "contracts/trader/BasicTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters (contracts/trader/BasicTraderPool.sol#33) is not in mixedCase\n",
                        "markdown": "Parameter [BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters](contracts/trader/BasicTraderPool.sol#L33) is not in mixedCase\n",
                        "first_markdown_element": "contracts/trader/BasicTraderPool.sol#L33",
                        "id": "c85437a97c24d3fd23c1ec9b7a5306b42de376ad7f05c21e46c2dceb976c08eb",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_name",
                        "source_mapping": {
                            "start": 4038,
                            "length": 21,
                            "filename_relative": "contracts/gov/GovPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                            "filename_short": "contracts/gov/GovPool.sol",
                            "is_dependency": false,
                            "lines": "114",
                            "starting_column": 9,
                            "ending_column": 30
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__GovPool_init",
                                "source_mapping": {
                                    "start": 3682,
                                    "length": 966,
                                    "filename_relative": "contracts/gov/GovPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                    "filename_short": "contracts/gov/GovPool.sol",
                                    "is_dependency": false,
                                    "lines": "104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "GovPool",
                                        "source_mapping": {
                                            "start": 1333,
                                            "length": 15251,
                                            "filename_relative": "contracts/gov/GovPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/GovPool.sol",
                                            "filename_short": "contracts/gov/GovPool.sol",
                                            "is_dependency": false,
                                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._name (contracts/gov/GovPool.sol#114) is not in mixedCase\n",
                        "markdown": "Parameter [GovPool.__GovPool_init(address,address,address,address,address,address,bool,uint256,string,string)._name](contracts/gov/GovPool.sol#L114) is not in mixedCase\n",
                        "first_markdown_element": "contracts/gov/GovPool.sol#L114",
                        "id": "f586d864053d7fc043c832e24b52b90cbf81722f9f71516f406bac3022e5e164",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                }
            ]
        },
        {
            "title": "Shadowing State Variables",
            "reported_impact": "Low",
            "reported_likelihood": "Low",
            "cwe_classification": 710,
            "vulnerability_class": "Best practices",
            "vulnerability_subclass": "Improper Adherence to Coding Standards",
            "vulnerable_functions": [
                "TraderPool::__TraderPool_init()",
                "InvestTraderPool::__InvestTraderPool_init()",
                "BasicTraderPool::__BasicTraderPool_init()",
                "GovValidatorsToken::constructor()",
                "ERC721Power::constructor()",
                "ERC721Multiplier::constructor()"
            ],
            "lines": "89-98, 33-44, 30-41, 48-68, 46-67, 23",
            "description": "State variables should not be shadowed in order to keep abstraction levels clear.",
            "possible_found_in": [
                {
                    "element": {
                        "type": "function",
                        "name": "__TraderPool_init",
                        "source_mapping": {
                            "start": 2807,
                            "length": 303,
                            "filename_relative": "contracts/trader/TraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                            "filename_short": "contracts/trader/TraderPool.sol",
                            "is_dependency": false,
                            "lines": "89, 90, 91, 92, 93, 94, 95, 96, 97, 98",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPool",
                                "source_mapping": {
                                    "start": 807,
                                    "length": 10962,
                                    "filename_relative": "contracts/trader/TraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                    "filename_short": "contracts/trader/TraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "__TraderPool_init(string,string,ITraderPool.PoolParameters)"
                        }
                    },
                    "detector": {
                        "description": "TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters) (contracts/trader/TraderPool.sol#89-98) ignores return value by _traderAdmins.add(poolParameters.trader) (contracts/trader/TraderPool.sol#97)\n",
                        "markdown": "[TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters)](contracts/trader/TraderPool.sol#L89-L98) ignores return value by [_traderAdmins.add(poolParameters.trader)](contracts/trader/TraderPool.sol#L97)\n",
                        "first_markdown_element": "contracts/trader/TraderPool.sol#L89-L98",
                        "id": "6361fb65e54204777890c905f859d4831b9298af79c3a54c85b6d78810154533",
                        "check": "unused-return",
                        "impact": "Medium",
                        "confidence": "Medium"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "symbol",
                        "source_mapping": {
                            "start": 787,
                            "length": 20,
                            "filename_relative": "contracts/gov/ERC721/ERC721Multiplier.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Multiplier.sol",
                            "filename_short": "contracts/gov/ERC721/ERC721Multiplier.sol",
                            "is_dependency": false,
                            "lines": "23",
                            "starting_column": 37,
                            "ending_column": 57
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "constructor",
                                "source_mapping": {
                                    "start": 755,
                                    "length": 77,
                                    "filename_relative": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Multiplier.sol",
                                    "filename_short": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                    "is_dependency": false,
                                    "lines": "23",
                                    "starting_column": 5,
                                    "ending_column": 82
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "ERC721Multiplier",
                                        "source_mapping": {
                                            "start": 326,
                                            "length": 2967,
                                            "filename_relative": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Multiplier.sol",
                                            "filename_short": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                            "is_dependency": false,
                                            "lines": "12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "constructor(string,string)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "ERC721Multiplier.constructor(string,string).symbol (contracts/gov/ERC721/ERC721Multiplier.sol#23) shadows:\n\t- ERC721.symbol() (node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#86-88) (function)\n\t- IERC721Metadata.symbol() (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#21) (function)\n",
                        "markdown": "[ERC721Multiplier.constructor(string,string).symbol](contracts/gov/ERC721/ERC721Multiplier.sol#L23) shadows:\n\t- [ERC721.symbol()](node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#L86-L88) (function)\n\t- [IERC721Metadata.symbol()](node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#L21) (function)\n",
                        "first_markdown_element": "contracts/gov/ERC721/ERC721Multiplier.sol#L23",
                        "id": "18da733e64e64d7b18dd24920c38dfab2d9d3aa4b188162957111e7f0f12ea6b",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "name",
                        "source_mapping": {
                            "start": 767,
                            "length": 18,
                            "filename_relative": "contracts/gov/ERC721/ERC721Multiplier.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Multiplier.sol",
                            "filename_short": "contracts/gov/ERC721/ERC721Multiplier.sol",
                            "is_dependency": false,
                            "lines": "23",
                            "starting_column": 17,
                            "ending_column": 35
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "constructor",
                                "source_mapping": {
                                    "start": 755,
                                    "length": 77,
                                    "filename_relative": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Multiplier.sol",
                                    "filename_short": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                    "is_dependency": false,
                                    "lines": "23",
                                    "starting_column": 5,
                                    "ending_column": 82
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "ERC721Multiplier",
                                        "source_mapping": {
                                            "start": 326,
                                            "length": 2967,
                                            "filename_relative": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Multiplier.sol",
                                            "filename_short": "contracts/gov/ERC721/ERC721Multiplier.sol",
                                            "is_dependency": false,
                                            "lines": "12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "constructor(string,string)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "ERC721Multiplier.constructor(string,string).name (contracts/gov/ERC721/ERC721Multiplier.sol#23) shadows:\n\t- ERC721.name() (node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#79-81) (function)\n\t- IERC721Metadata.name() (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#16) (function)\n",
                        "markdown": "[ERC721Multiplier.constructor(string,string).name](contracts/gov/ERC721/ERC721Multiplier.sol#L23) shadows:\n\t- [ERC721.name()](node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#L79-L81) (function)\n\t- [IERC721Metadata.name()](node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#L16) (function)\n",
                        "first_markdown_element": "contracts/gov/ERC721/ERC721Multiplier.sol#L23",
                        "id": "53e1f1434eefe141ef7d0b926e597b912eb33972344df8c8bd6613082498a70e",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "name",
                        "source_mapping": {
                            "start": 835,
                            "length": 20,
                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                            "is_dependency": false,
                            "lines": "34",
                            "starting_column": 9,
                            "ending_column": 29
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__InvestTraderPool_init",
                                "source_mapping": {
                                    "start": 793,
                                    "length": 446,
                                    "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                    "filename_short": "contracts/trader/InvestTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "InvestTraderPool",
                                        "source_mapping": {
                                            "start": 200,
                                            "length": 4920,
                                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address).name (contracts/trader/InvestTraderPool.sol#34) shadows:\n\t- ERC20Upgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#67-69) (function)\n\t- IERC20MetadataUpgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)\n",
                        "markdown": "[InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address).name](contracts/trader/InvestTraderPool.sol#L34) shadows:\n\t- [ERC20Upgradeable.name()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#L67-L69) (function)\n\t- [IERC20MetadataUpgradeable.name()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#L17) (function)\n",
                        "first_markdown_element": "contracts/trader/InvestTraderPool.sol#L34",
                        "id": "6bac11005c792e791d1ee60ee9b5db1aaddc7e7758918c6eca5bc9a56054229f",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "symbol",
                        "source_mapping": {
                            "start": 2873,
                            "length": 22,
                            "filename_relative": "contracts/trader/TraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                            "filename_short": "contracts/trader/TraderPool.sol",
                            "is_dependency": false,
                            "lines": "91",
                            "starting_column": 9,
                            "ending_column": 31
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__TraderPool_init",
                                "source_mapping": {
                                    "start": 2807,
                                    "length": 303,
                                    "filename_relative": "contracts/trader/TraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                    "filename_short": "contracts/trader/TraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "89, 90, 91, 92, 93, 94, 95, 96, 97, 98",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPool",
                                        "source_mapping": {
                                            "start": 807,
                                            "length": 10962,
                                            "filename_relative": "contracts/trader/TraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                            "filename_short": "contracts/trader/TraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__TraderPool_init(string,string,ITraderPool.PoolParameters)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters).symbol (contracts/trader/TraderPool.sol#91) shadows:\n\t- ERC20Upgradeable.symbol() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#75-77) (function)\n\t- IERC20MetadataUpgradeable.symbol() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)\n",
                        "markdown": "[TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters).symbol](contracts/trader/TraderPool.sol#L91) shadows:\n\t- [ERC20Upgradeable.symbol()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#L75-L77) (function)\n\t- [IERC20MetadataUpgradeable.symbol()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#L22) (function)\n",
                        "first_markdown_element": "contracts/trader/TraderPool.sol#L91",
                        "id": "9696f9c4c526c57c208a5bda4ac8bdfd0b9cdf78f4147559cd5e9db7f7bde553",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "name",
                        "source_mapping": {
                            "start": 1309,
                            "length": 18,
                            "filename_relative": "contracts/gov/ERC721/ERC721Power.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Power.sol",
                            "filename_short": "contracts/gov/ERC721/ERC721Power.sol",
                            "is_dependency": false,
                            "lines": "47",
                            "starting_column": 9,
                            "ending_column": 27
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "constructor",
                                "source_mapping": {
                                    "start": 1288,
                                    "length": 920,
                                    "filename_relative": "contracts/gov/ERC721/ERC721Power.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Power.sol",
                                    "filename_short": "contracts/gov/ERC721/ERC721Power.sol",
                                    "is_dependency": false,
                                    "lines": "46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "ERC721Power",
                                        "source_mapping": {
                                            "start": 607,
                                            "length": 6822,
                                            "filename_relative": "contracts/gov/ERC721/ERC721Power.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Power.sol",
                                            "filename_short": "contracts/gov/ERC721/ERC721Power.sol",
                                            "is_dependency": false,
                                            "lines": "19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "constructor(string,string,uint64,address,uint256,uint256,uint256)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "ERC721Power.constructor(string,string,uint64,address,uint256,uint256,uint256).name (contracts/gov/ERC721/ERC721Power.sol#47) shadows:\n\t- ERC721.name() (node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#79-81) (function)\n\t- IERC721Metadata.name() (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#16) (function)\n",
                        "markdown": "[ERC721Power.constructor(string,string,uint64,address,uint256,uint256,uint256).name](contracts/gov/ERC721/ERC721Power.sol#L47) shadows:\n\t- [ERC721.name()](node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#L79-L81) (function)\n\t- [IERC721Metadata.name()](node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#L16) (function)\n",
                        "first_markdown_element": "contracts/gov/ERC721/ERC721Power.sol#L47",
                        "id": "9bc01642d728b46a45e1744a7855aa07003ac03b45dfad405b48ecb69bd0983f",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "symbol",
                        "source_mapping": {
                            "start": 865,
                            "length": 22,
                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                            "is_dependency": false,
                            "lines": "35",
                            "starting_column": 9,
                            "ending_column": 31
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__InvestTraderPool_init",
                                "source_mapping": {
                                    "start": 793,
                                    "length": 446,
                                    "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                    "filename_short": "contracts/trader/InvestTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "InvestTraderPool",
                                        "source_mapping": {
                                            "start": 200,
                                            "length": 4920,
                                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address).symbol (contracts/trader/InvestTraderPool.sol#35) shadows:\n\t- ERC20Upgradeable.symbol() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#75-77) (function)\n\t- IERC20MetadataUpgradeable.symbol() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#22) (function)\n",
                        "markdown": "[InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address).symbol](contracts/trader/InvestTraderPool.sol#L35) shadows:\n\t- [ERC20Upgradeable.symbol()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#L75-L77) (function)\n\t- [IERC20MetadataUpgradeable.symbol()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#L22) (function)\n",
                        "first_markdown_element": "contracts/trader/InvestTraderPool.sol#L35",
                        "id": "a319b757d92ee6aab181b43dc794b64346f5c802a9eb7a79a9f3d87b352c2419",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "name",
                        "source_mapping": {
                            "start": 2843,
                            "length": 20,
                            "filename_relative": "contracts/trader/TraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                            "filename_short": "contracts/trader/TraderPool.sol",
                            "is_dependency": false,
                            "lines": "90",
                            "starting_column": 9,
                            "ending_column": 29
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__TraderPool_init",
                                "source_mapping": {
                                    "start": 2807,
                                    "length": 303,
                                    "filename_relative": "contracts/trader/TraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                    "filename_short": "contracts/trader/TraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "89, 90, 91, 92, 93, 94, 95, 96, 97, 98",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "TraderPool",
                                        "source_mapping": {
                                            "start": 807,
                                            "length": 10962,
                                            "filename_relative": "contracts/trader/TraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                            "filename_short": "contracts/trader/TraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__TraderPool_init(string,string,ITraderPool.PoolParameters)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters).name (contracts/trader/TraderPool.sol#90) shadows:\n\t- ERC20Upgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#67-69) (function)\n\t- IERC20MetadataUpgradeable.name() (node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#17) (function)\n",
                        "markdown": "[TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters).name](contracts/trader/TraderPool.sol#L90) shadows:\n\t- [ERC20Upgradeable.name()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol#L67-L69) (function)\n\t- [IERC20MetadataUpgradeable.name()](node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol#L17) (function)\n",
                        "first_markdown_element": "contracts/trader/TraderPool.sol#L90",
                        "id": "b061dfc0df57e45759341d72a2630837c6451a75388a30ecf8c1a6c180d0b1d5",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "symbol",
                        "source_mapping": {
                            "start": 1337,
                            "length": 20,
                            "filename_relative": "contracts/gov/ERC721/ERC721Power.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Power.sol",
                            "filename_short": "contracts/gov/ERC721/ERC721Power.sol",
                            "is_dependency": false,
                            "lines": "48",
                            "starting_column": 9,
                            "ending_column": 29
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "constructor",
                                "source_mapping": {
                                    "start": 1288,
                                    "length": 920,
                                    "filename_relative": "contracts/gov/ERC721/ERC721Power.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Power.sol",
                                    "filename_short": "contracts/gov/ERC721/ERC721Power.sol",
                                    "is_dependency": false,
                                    "lines": "46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "ERC721Power",
                                        "source_mapping": {
                                            "start": 607,
                                            "length": 6822,
                                            "filename_relative": "contracts/gov/ERC721/ERC721Power.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/gov/ERC721/ERC721Power.sol",
                                            "filename_short": "contracts/gov/ERC721/ERC721Power.sol",
                                            "is_dependency": false,
                                            "lines": "19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "constructor(string,string,uint64,address,uint256,uint256,uint256)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "ERC721Power.constructor(string,string,uint64,address,uint256,uint256,uint256).symbol (contracts/gov/ERC721/ERC721Power.sol#48) shadows:\n\t- ERC721.symbol() (node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#86-88) (function)\n\t- IERC721Metadata.symbol() (node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#21) (function)\n",
                        "markdown": "[ERC721Power.constructor(string,string,uint64,address,uint256,uint256,uint256).symbol](contracts/gov/ERC721/ERC721Power.sol#L48) shadows:\n\t- [ERC721.symbol()](node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol#L86-L88) (function)\n\t- [IERC721Metadata.symbol()](node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol#L21) (function)\n",
                        "first_markdown_element": "contracts/gov/ERC721/ERC721Power.sol#L48",
                        "id": "d965262fdd7923750eb511bc9fc48f765ecaa9b0712ae3d8563f881d307c3dc2",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_poolParameters",
                        "source_mapping": {
                            "start": 1379,
                            "length": 39,
                            "filename_relative": "contracts/trader/TraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                            "filename_short": "contracts/trader/TraderPool.sol",
                            "is_dependency": false,
                            "lines": "39",
                            "starting_column": 5,
                            "ending_column": 44
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPool",
                                "source_mapping": {
                                    "start": 807,
                                    "length": 10962,
                                    "filename_relative": "contracts/trader/TraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                    "filename_short": "contracts/trader/TraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters (contracts/trader/BasicTraderPool.sol#33) shadows:\n\t- TraderPool._poolParameters (contracts/trader/TraderPool.sol#39) (state variable)\n",
                        "markdown": "[BasicTraderPool.__BasicTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters](contracts/trader/BasicTraderPool.sol#L33) shadows:\n\t- [TraderPool._poolParameters](contracts/trader/TraderPool.sol#L39) (state variable)\n",
                        "first_markdown_element": "contracts/trader/BasicTraderPool.sol#L33",
                        "id": "e4d356f444fc2a30640cf9e8e6602b6f090283767467f5ce2a512b1dfa8f2e6b",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_poolParameters",
                        "source_mapping": {
                            "start": 897,
                            "length": 51,
                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                            "is_dependency": false,
                            "lines": "36",
                            "starting_column": 9,
                            "ending_column": 60
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__InvestTraderPool_init",
                                "source_mapping": {
                                    "start": 793,
                                    "length": 446,
                                    "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                    "filename_short": "contracts/trader/InvestTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "InvestTraderPool",
                                        "source_mapping": {
                                            "start": 200,
                                            "length": 4920,
                                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        }
                    },
                    "detector": {
                        "description": "InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters (contracts/trader/InvestTraderPool.sol#36) shadows:\n\t- TraderPool._poolParameters (contracts/trader/TraderPool.sol#39) (state variable)\n",
                        "markdown": "[InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters](contracts/trader/InvestTraderPool.sol#L36) shadows:\n\t- [TraderPool._poolParameters](contracts/trader/TraderPool.sol#L39) (state variable)\n",
                        "first_markdown_element": "contracts/trader/InvestTraderPool.sol#L36",
                        "id": "f53ae0da7c23db43f7fa830845627724eb2bfcc72d527e34ebc9dfbda76f8755",
                        "check": "shadowing-local",
                        "impact": "Low",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "__TraderPool_init",
                        "source_mapping": {
                            "start": 2807,
                            "length": 303,
                            "filename_relative": "contracts/trader/TraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                            "filename_short": "contracts/trader/TraderPool.sol",
                            "is_dependency": false,
                            "lines": "89, 90, 91, 92, 93, 94, 95, 96, 97, 98",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "TraderPool",
                                "source_mapping": {
                                    "start": 807,
                                    "length": 10962,
                                    "filename_relative": "contracts/trader/TraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/TraderPool.sol",
                                    "filename_short": "contracts/trader/TraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "__TraderPool_init(string,string,ITraderPool.PoolParameters)"
                        },
                        "additional_fields": {
                            "target": "function",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Function TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters) (contracts/trader/TraderPool.sol#89-98) is not in mixedCase\n",
                        "markdown": "Function [TraderPool.__TraderPool_init(string,string,ITraderPool.PoolParameters)](contracts/trader/TraderPool.sol#L89-L98) is not in mixedCase\n",
                        "first_markdown_element": "contracts/trader/TraderPool.sol#L89-L98",
                        "id": "0ed1c99d962b5d984c989f5f124ed6a9d2197033356c2f92b4138d5e7949f193",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "variable",
                        "name": "_poolParameters",
                        "source_mapping": {
                            "start": 897,
                            "length": 51,
                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                            "is_dependency": false,
                            "lines": "36",
                            "starting_column": 9,
                            "ending_column": 60
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "function",
                                "name": "__InvestTraderPool_init",
                                "source_mapping": {
                                    "start": 793,
                                    "length": 446,
                                    "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                    "filename_short": "contracts/trader/InvestTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44",
                                    "starting_column": 5,
                                    "ending_column": 6
                                },
                                "type_specific_fields": {
                                    "parent": {
                                        "type": "contract",
                                        "name": "InvestTraderPool",
                                        "source_mapping": {
                                            "start": 200,
                                            "length": 4920,
                                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                                            "is_dependency": false,
                                            "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168",
                                            "starting_column": 1,
                                            "ending_column": 2
                                        }
                                    },
                                    "signature": "__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                                }
                            }
                        },
                        "additional_fields": {
                            "target": "parameter",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Parameter InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters (contracts/trader/InvestTraderPool.sol#36) is not in mixedCase\n",
                        "markdown": "Parameter [InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)._poolParameters](contracts/trader/InvestTraderPool.sol#L36) is not in mixedCase\n",
                        "first_markdown_element": "contracts/trader/InvestTraderPool.sol#L36",
                        "id": "55de1f67841cf59ce11e0084ba0c3a45619aa03c29c0f2ce7279a7cbd321c1f7",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                },
                {
                    "element": {
                        "type": "function",
                        "name": "__InvestTraderPool_init",
                        "source_mapping": {
                            "start": 793,
                            "length": 446,
                            "filename_relative": "contracts/trader/InvestTraderPool.sol",
                            "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                            "filename_short": "contracts/trader/InvestTraderPool.sol",
                            "is_dependency": false,
                            "lines": "33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44",
                            "starting_column": 5,
                            "ending_column": 6
                        },
                        "type_specific_fields": {
                            "parent": {
                                "type": "contract",
                                "name": "InvestTraderPool",
                                "source_mapping": {
                                    "start": 200,
                                    "length": 4920,
                                    "filename_relative": "contracts/trader/InvestTraderPool.sol",
                                    "filename_absolute": "/home/francisco/Documentos/Projects/Goose/goose/DeXe00/vulnerable/DeXe/contracts/trader/InvestTraderPool.sol",
                                    "filename_short": "contracts/trader/InvestTraderPool.sol",
                                    "is_dependency": false,
                                    "lines": "9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168",
                                    "starting_column": 1,
                                    "ending_column": 2
                                }
                            },
                            "signature": "__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)"
                        },
                        "additional_fields": {
                            "target": "function",
                            "convention": "mixedCase"
                        }
                    },
                    "detector": {
                        "description": "Function InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address) (contracts/trader/InvestTraderPool.sol#33-44) is not in mixedCase\n",
                        "markdown": "Function [InvestTraderPool.__InvestTraderPool_init(string,string,ITraderPool.PoolParameters,address)](contracts/trader/InvestTraderPool.sol#L33-L44) is not in mixedCase\n",
                        "first_markdown_element": "contracts/trader/InvestTraderPool.sol#L33-L44",
                        "id": "b3d0f483d406188c4d4357474b7144301f9256fcedd013ba9eb5daed43fef86c",
                        "check": "naming-convention",
                        "impact": "Informational",
                        "confidence": "High"
                    }
                }
            ]
        }
    ]
}